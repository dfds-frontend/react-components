import _styled from "@emotion/styled-base";
import _css from "@emotion/css";
import { jsx as ___EmotionJSX } from "@emotion/core";

function _templateObject8() {
  var data = _taggedTemplateLiteral(["\n~~~jsx\nimport { Button } from '@dfds-shared/react-components';\nimport { RightLink } from '@dfds-shared/icons';\nimport styled from '@emotion/styled'\n\nconst CustomButton = styled(Button)`\n  height: auto;\n  padding: ", ";\n  width: 220px;\n  white-space: normal;\n  text-align: left;\n  line-height: 1.2;\n`;\n\n<CustomButton icon={<RightLink />}>\n  Fixed width button with long text\n</CustomButton>\n~~~\n"], ["\n~~~jsx\nimport { Button } from '@dfds-shared/react-components';\nimport { RightLink } from '@dfds-shared/icons';\nimport styled from '@emotion/styled'\n\nconst CustomButton = styled(Button)\\`\n  height: auto;\n  padding: ", ";\n  width: 220px;\n  white-space: normal;\n  text-align: left;\n  line-height: 1.2;\n\\`;\n\n<CustomButton icon={<RightLink />}>\n  Fixed width button with long text\n</CustomButton>\n~~~\n"]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteral(["\n## Custom styles\nIt's possible to customize the styles\n"]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["\n## Overflow\nDefaults to ellipsis when the content overflows the width.\n"]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["\n~~~jsx\nimport { Button } from '@dfds-shared/react-components';\nimport { LeftArrow } from '@dfds-shared/icons';\n\n<Button variation=\"secondary\" icon={<LeftArrow />} iconAlign=\"left\">\n  Go back\n</Button>\n~~~\n"]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n## With icons\nThe `icon` prop can be used to add an icon. Alignment is controlled with the `iconAlign` prop.\n      "], ["\n## With icons\nThe \\`icon\\` prop can be used to add an icon. Alignment is controlled with the \\`iconAlign\\` prop.\n      "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n## Variations\nThe `variation` prop accepts the following values: `primary`, `secondary`, `outlined`, `text`\n"], ["\n## Variations\nThe \\`variation\\` prop accepts the following values: \\`primary\\`, \\`secondary\\`, \\`outlined\\`, \\`text\\`\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n~~~jsx\nimport { Button } from '@dfds-shared/react-components';\n\n<Button>Button</Button>\n~~~\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n# Button\nTrigger action when clicked.\n\n`Button` has fixed `height` of 40px (50px on mobile) with no wrapping inside.\n  "], ["\n# Button\nTrigger action when clicked.\n\n\\`Button\\` has fixed \\`height\\` of 40px (50px on mobile) with no wrapping inside.\n  "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import { storiesOf } from '@storybook/react';
import { withKnobs } from '@storybook/addon-knobs';
import Button from './Button';
import { Download, RightLink, Down, LeftArrow } from '@dfds-shared/icons';
import { rem } from '../styles/rem';
import { Md } from '../../../../scripts/markdown/Md';
var stories = storiesOf('UI|Buttons', module);
stories.addDecorator(withKnobs);
stories.addParameters({
  options: {
    selectedPanel: 'storybook/knobs/panel'
  }
});

var SceneContainer = _styled("div", {
  target: "e1fgivyr0"
})(process.env.NODE_ENV === "production" ? {
  name: "74kdtm",
  styles: "& > *{margin:10px;}"
} : {
  name: "74kdtm",
  styles: "& > *{margin:10px;}",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnN0b3JpZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWVpQyIsImZpbGUiOiIuLi8uLi9zcmMvYnV0dG9uL0J1dHRvbi5zdG9yaWVzLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHsgc3Rvcmllc09mIH0gZnJvbSAnQHN0b3J5Ym9vay9yZWFjdCdcclxuaW1wb3J0IHsgd2l0aEtub2JzIH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1rbm9icydcclxuaW1wb3J0IEJ1dHRvbiBmcm9tICcuL0J1dHRvbidcclxuaW1wb3J0IGNzcyBmcm9tICdAZW1vdGlvbi9jc3MnXHJcbmltcG9ydCB7IERvd25sb2FkLCBSaWdodExpbmssIERvd24sIExlZnRBcnJvdyB9IGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucydcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnXHJcbmltcG9ydCB7IEJ1dHRvblZhcmlhdGlvbiB9IGZyb20gJy4vQmFzZUJ1dHRvbidcclxuaW1wb3J0IHsgcmVtIH0gZnJvbSAnLi4vc3R5bGVzL3JlbSdcclxuaW1wb3J0IHsgTWQgfSBmcm9tICcuLi8uLi8uLi8uLi9zY3JpcHRzL21hcmtkb3duL01kJ1xyXG5cclxuY29uc3Qgc3RvcmllcyA9IHN0b3JpZXNPZignVUl8QnV0dG9ucycsIG1vZHVsZSlcclxuc3Rvcmllcy5hZGREZWNvcmF0b3Iod2l0aEtub2JzKVxyXG5zdG9yaWVzLmFkZFBhcmFtZXRlcnMoeyBvcHRpb25zOiB7IHNlbGVjdGVkUGFuZWw6ICdzdG9yeWJvb2sva25vYnMvcGFuZWwnIH0gfSlcclxuXHJcbmNvbnN0IFNjZW5lQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICAmID4gKiB7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbiAgfVxyXG5gXHJcbmNvbnN0IFNjZW5lID0gKHsgdmFyaWF0aW9uIH06IHsgdmFyaWF0aW9uOiBCdXR0b25WYXJpYXRpb24gfSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8U2NlbmVDb250YWluZXI+XHJcbiAgICAgIDxCdXR0b24gdmFyaWF0aW9uPXt2YXJpYXRpb259PkJ1dHRvbjwvQnV0dG9uPlxyXG4gICAgICA8QnV0dG9uIHZhcmlhdGlvbj17dmFyaWF0aW9ufSBzdWJtaXR0aW5nIGRpc2FibGVkPlxyXG4gICAgICAgIEJ1dHRvblxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgICAgPEJ1dHRvbiB2YXJpYXRpb249e3ZhcmlhdGlvbn0gZGlzYWJsZWQ+XHJcbiAgICAgICAgQnV0dG9uXHJcbiAgICAgIDwvQnV0dG9uPlxyXG4gICAgPC9TY2VuZUNvbnRhaW5lcj5cclxuICApXHJcbn1cclxuXHJcbmNvbnN0IEN1c3RvbUJ1dHRvbiA9IHN0eWxlZChCdXR0b24pYFxyXG4gIGhlaWdodDogYXV0bztcclxuICBwYWRkaW5nOiAke3JlbSgxMCl9O1xyXG4gIHdpZHRoOiAyMjBweDtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgbGluZS1oZWlnaHQ6IDEuMjtcclxuYFxyXG5cclxuc3Rvcmllcy5hZGQoJ0J1dHRvbicsICgpID0+IChcclxuICA8ZGl2XHJcbiAgICBjc3M9e2Nzc2BcclxuICAgICAgcGFkZGluZzogMjBweDtcclxuICAgIGB9XHJcbiAgPlxyXG4gICAge01kYFxyXG4jIEJ1dHRvblxyXG5UcmlnZ2VyIGFjdGlvbiB3aGVuIGNsaWNrZWQuXHJcblxyXG5cXGBCdXR0b25cXGAgaGFzIGZpeGVkIFxcYGhlaWdodFxcYCBvZiA0MHB4ICg1MHB4IG9uIG1vYmlsZSkgd2l0aCBubyB3cmFwcGluZyBpbnNpZGUuXHJcbiAgYH1cclxuICAgIDxCdXR0b24+QnV0dG9uPC9CdXR0b24+XHJcbiAgICB7TWRgXHJcbn5+fmpzeFxyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICdAZGZkcy1zaGFyZWQvcmVhY3QtY29tcG9uZW50cyc7XHJcblxyXG48QnV0dG9uPkJ1dHRvbjwvQnV0dG9uPlxyXG5+fn5cclxuYH1cclxuICAgIHtNZGBcclxuIyMgVmFyaWF0aW9uc1xyXG5UaGUgXFxgdmFyaWF0aW9uXFxgIHByb3AgYWNjZXB0cyB0aGUgZm9sbG93aW5nIHZhbHVlczogXFxgcHJpbWFyeVxcYCwgXFxgc2Vjb25kYXJ5XFxgLCBcXGBvdXRsaW5lZFxcYCwgXFxgdGV4dFxcYFxyXG5gfVxyXG4gICAgPFNjZW5lIHZhcmlhdGlvbj1cInByaW1hcnlcIiAvPlxyXG4gICAgPFNjZW5lIHZhcmlhdGlvbj1cInNlY29uZGFyeVwiIC8+XHJcbiAgICA8U2NlbmUgdmFyaWF0aW9uPVwib3V0bGluZWRcIiAvPlxyXG4gICAgPFNjZW5lIHZhcmlhdGlvbj1cInRleHRcIiAvPlxyXG5cclxuICAgIHtNZGBcclxuIyMgV2l0aCBpY29uc1xyXG5UaGUgXFxgaWNvblxcYCBwcm9wIGNhbiBiZSB1c2VkIHRvIGFkZCBhbiBpY29uLiBBbGlnbm1lbnQgaXMgY29udHJvbGxlZCB3aXRoIHRoZSBcXGBpY29uQWxpZ25cXGAgcHJvcC5cclxuICAgICAgYH1cclxuXHJcbiAgICA8U2NlbmVDb250YWluZXI+XHJcbiAgICAgIDxCdXR0b24gdmFyaWF0aW9uPVwicHJpbWFyeVwiIGljb249ezxSaWdodExpbmsgLz59PlxyXG4gICAgICAgIFJlYWQgbW9yZVxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgICAgPEJ1dHRvbiB2YXJpYXRpb249XCJzZWNvbmRhcnlcIiBpY29uPXs8RG93bmxvYWQgLz59PlxyXG4gICAgICAgIERvd25sb2FkXHJcbiAgICAgIDwvQnV0dG9uPlxyXG4gICAgICA8QnV0dG9uIHZhcmlhdGlvbj1cIm91dGxpbmVkXCIgaWNvbj17PERvd24gLz59PlxyXG4gICAgICAgIFNob3cgbW9yZVxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgICAgPEJ1dHRvbiB2YXJpYXRpb249XCJzZWNvbmRhcnlcIiBpY29uPXs8TGVmdEFycm93IC8+fSBpY29uQWxpZ249XCJsZWZ0XCI+XHJcbiAgICAgICAgR28gYmFja1xyXG4gICAgICA8L0J1dHRvbj5cclxuICAgIDwvU2NlbmVDb250YWluZXI+XHJcbiAgICB7TWRgXHJcbn5+fmpzeFxyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICdAZGZkcy1zaGFyZWQvcmVhY3QtY29tcG9uZW50cyc7XHJcbmltcG9ydCB7IExlZnRBcnJvdyB9IGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucyc7XHJcblxyXG48QnV0dG9uIHZhcmlhdGlvbj1cInNlY29uZGFyeVwiIGljb249ezxMZWZ0QXJyb3cgLz59IGljb25BbGlnbj1cImxlZnRcIj5cclxuICBHbyBiYWNrXHJcbjwvQnV0dG9uPlxyXG5+fn5cclxuYH1cclxuICAgIHtNZGBcclxuIyMgT3ZlcmZsb3dcclxuRGVmYXVsdHMgdG8gZWxsaXBzaXMgd2hlbiB0aGUgY29udGVudCBvdmVyZmxvd3MgdGhlIHdpZHRoLlxyXG5gfVxyXG4gICAgPFNjZW5lQ29udGFpbmVyPlxyXG4gICAgICA8QnV0dG9uXHJcbiAgICAgICAgdmFyaWF0aW9uPVwic2Vjb25kYXJ5XCJcclxuICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICBgfVxyXG4gICAgICA+XHJcbiAgICAgICAgRml4ZWQgd2lkdGggYnV0dG9uIHdpdGggbG9uZyB0ZXh0XHJcbiAgICAgIDwvQnV0dG9uPlxyXG4gICAgICA8QnV0dG9uXHJcbiAgICAgICAgdmFyaWF0aW9uPVwic2Vjb25kYXJ5XCJcclxuICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICBgfVxyXG4gICAgICAgIGljb249ezxSaWdodExpbmsgLz59XHJcbiAgICAgICAgZGlzYWJsZWRcclxuICAgICAgPlxyXG4gICAgICAgIEZpeGVkIHdpZHRoIGJ1dHRvbiB3aXRoIGxvbmcgdGV4dFxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgIDwvU2NlbmVDb250YWluZXI+XHJcbiAgICB7TWRgXHJcbiMjIEN1c3RvbSBzdHlsZXNcclxuSXQncyBwb3NzaWJsZSB0byBjdXN0b21pemUgdGhlIHN0eWxlc1xyXG5gfVxyXG4gICAgPFNjZW5lQ29udGFpbmVyPlxyXG4gICAgICA8Q3VzdG9tQnV0dG9uIGljb249ezxSaWdodExpbmsgLz59PkZpeGVkIHdpZHRoIGJ1dHRvbiB3aXRoIGxvbmcgdGV4dDwvQ3VzdG9tQnV0dG9uPlxyXG4gICAgICA8Q3VzdG9tQnV0dG9uIHN1Ym1pdHRpbmcgaWNvbj17PFJpZ2h0TGluayAvPn0gZGlzYWJsZWQ+XHJcbiAgICAgICAgRml4ZWQgd2lkdGggYnV0dG9uIHdpdGggbG9uZyB0ZXh0XHJcbiAgICAgIDwvQ3VzdG9tQnV0dG9uPlxyXG4gICAgICA8Q3VzdG9tQnV0dG9uIGljb249ezxSaWdodExpbmsgLz59IGRpc2FibGVkPlxyXG4gICAgICAgIEZpeGVkIHdpZHRoIGJ1dHRvbiB3aXRoIGxvbmcgdGV4dFxyXG4gICAgICA8L0N1c3RvbUJ1dHRvbj5cclxuICAgIDwvU2NlbmVDb250YWluZXI+XHJcbiAgICB7TWRgXHJcbn5+fmpzeFxyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICdAZGZkcy1zaGFyZWQvcmVhY3QtY29tcG9uZW50cyc7XHJcbmltcG9ydCB7IFJpZ2h0TGluayB9IGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJ1xyXG5cclxuY29uc3QgQ3VzdG9tQnV0dG9uID0gc3R5bGVkKEJ1dHRvbilcXGBcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgcGFkZGluZzogJHtyZW0oMTApfTtcclxuICB3aWR0aDogMjIwcHg7XHJcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjI7XHJcblxcYDtcclxuXHJcbjxDdXN0b21CdXR0b24gaWNvbj17PFJpZ2h0TGluayAvPn0+XHJcbiAgRml4ZWQgd2lkdGggYnV0dG9uIHdpdGggbG9uZyB0ZXh0XHJcbjwvQ3VzdG9tQnV0dG9uPlxyXG5+fn5cclxuYH1cclxuICA8L2Rpdj5cclxuKSlcclxuIl19 */"
});

var Scene = function Scene(_ref4) {
  var variation = _ref4.variation;
  return ___EmotionJSX(SceneContainer, null, ___EmotionJSX(Button, {
    variation: variation
  }, "Button"), ___EmotionJSX(Button, {
    variation: variation,
    submitting: true,
    disabled: true
  }, "Button"), ___EmotionJSX(Button, {
    variation: variation,
    disabled: true
  }, "Button"));
};

var CustomButton =
/*#__PURE__*/
_styled(Button, {
  target: "e1fgivyr1"
})("height:auto;padding:", rem(10), ";width:220px;white-space:normal;text-align:left;line-height:1.2;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnN0b3JpZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtDbUMiLCJmaWxlIjoiLi4vLi4vc3JjL2J1dHRvbi9CdXR0b24uc3Rvcmllcy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7IHN0b3JpZXNPZiB9IGZyb20gJ0BzdG9yeWJvb2svcmVhY3QnXHJcbmltcG9ydCB7IHdpdGhLbm9icyB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24ta25vYnMnXHJcbmltcG9ydCBCdXR0b24gZnJvbSAnLi9CdXR0b24nXHJcbmltcG9ydCBjc3MgZnJvbSAnQGVtb3Rpb24vY3NzJ1xyXG5pbXBvcnQgeyBEb3dubG9hZCwgUmlnaHRMaW5rLCBEb3duLCBMZWZ0QXJyb3cgfSBmcm9tICdAZGZkcy1zaGFyZWQvaWNvbnMnXHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJ1xyXG5pbXBvcnQgeyBCdXR0b25WYXJpYXRpb24gfSBmcm9tICcuL0Jhc2VCdXR0b24nXHJcbmltcG9ydCB7IHJlbSB9IGZyb20gJy4uL3N0eWxlcy9yZW0nXHJcbmltcG9ydCB7IE1kIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NyaXB0cy9tYXJrZG93bi9NZCdcclxuXHJcbmNvbnN0IHN0b3JpZXMgPSBzdG9yaWVzT2YoJ1VJfEJ1dHRvbnMnLCBtb2R1bGUpXHJcbnN0b3JpZXMuYWRkRGVjb3JhdG9yKHdpdGhLbm9icylcclxuc3Rvcmllcy5hZGRQYXJhbWV0ZXJzKHsgb3B0aW9uczogeyBzZWxlY3RlZFBhbmVsOiAnc3Rvcnlib29rL2tub2JzL3BhbmVsJyB9IH0pXHJcblxyXG5jb25zdCBTY2VuZUNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgJiA+ICoge1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG4gIH1cclxuYFxyXG5jb25zdCBTY2VuZSA9ICh7IHZhcmlhdGlvbiB9OiB7IHZhcmlhdGlvbjogQnV0dG9uVmFyaWF0aW9uIH0pID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPFNjZW5lQ29udGFpbmVyPlxyXG4gICAgICA8QnV0dG9uIHZhcmlhdGlvbj17dmFyaWF0aW9ufT5CdXR0b248L0J1dHRvbj5cclxuICAgICAgPEJ1dHRvbiB2YXJpYXRpb249e3ZhcmlhdGlvbn0gc3VibWl0dGluZyBkaXNhYmxlZD5cclxuICAgICAgICBCdXR0b25cclxuICAgICAgPC9CdXR0b24+XHJcbiAgICAgIDxCdXR0b24gdmFyaWF0aW9uPXt2YXJpYXRpb259IGRpc2FibGVkPlxyXG4gICAgICAgIEJ1dHRvblxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgIDwvU2NlbmVDb250YWluZXI+XHJcbiAgKVxyXG59XHJcblxyXG5jb25zdCBDdXN0b21CdXR0b24gPSBzdHlsZWQoQnV0dG9uKWBcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgcGFkZGluZzogJHtyZW0oMTApfTtcclxuICB3aWR0aDogMjIwcHg7XHJcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjI7XHJcbmBcclxuXHJcbnN0b3JpZXMuYWRkKCdCdXR0b24nLCAoKSA9PiAoXHJcbiAgPGRpdlxyXG4gICAgY3NzPXtjc3NgXHJcbiAgICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBgfVxyXG4gID5cclxuICAgIHtNZGBcclxuIyBCdXR0b25cclxuVHJpZ2dlciBhY3Rpb24gd2hlbiBjbGlja2VkLlxyXG5cclxuXFxgQnV0dG9uXFxgIGhhcyBmaXhlZCBcXGBoZWlnaHRcXGAgb2YgNDBweCAoNTBweCBvbiBtb2JpbGUpIHdpdGggbm8gd3JhcHBpbmcgaW5zaWRlLlxyXG4gIGB9XHJcbiAgICA8QnV0dG9uPkJ1dHRvbjwvQnV0dG9uPlxyXG4gICAge01kYFxyXG5+fn5qc3hcclxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQGRmZHMtc2hhcmVkL3JlYWN0LWNvbXBvbmVudHMnO1xyXG5cclxuPEJ1dHRvbj5CdXR0b248L0J1dHRvbj5cclxufn5+XHJcbmB9XHJcbiAgICB7TWRgXHJcbiMjIFZhcmlhdGlvbnNcclxuVGhlIFxcYHZhcmlhdGlvblxcYCBwcm9wIGFjY2VwdHMgdGhlIGZvbGxvd2luZyB2YWx1ZXM6IFxcYHByaW1hcnlcXGAsIFxcYHNlY29uZGFyeVxcYCwgXFxgb3V0bGluZWRcXGAsIFxcYHRleHRcXGBcclxuYH1cclxuICAgIDxTY2VuZSB2YXJpYXRpb249XCJwcmltYXJ5XCIgLz5cclxuICAgIDxTY2VuZSB2YXJpYXRpb249XCJzZWNvbmRhcnlcIiAvPlxyXG4gICAgPFNjZW5lIHZhcmlhdGlvbj1cIm91dGxpbmVkXCIgLz5cclxuICAgIDxTY2VuZSB2YXJpYXRpb249XCJ0ZXh0XCIgLz5cclxuXHJcbiAgICB7TWRgXHJcbiMjIFdpdGggaWNvbnNcclxuVGhlIFxcYGljb25cXGAgcHJvcCBjYW4gYmUgdXNlZCB0byBhZGQgYW4gaWNvbi4gQWxpZ25tZW50IGlzIGNvbnRyb2xsZWQgd2l0aCB0aGUgXFxgaWNvbkFsaWduXFxgIHByb3AuXHJcbiAgICAgIGB9XHJcblxyXG4gICAgPFNjZW5lQ29udGFpbmVyPlxyXG4gICAgICA8QnV0dG9uIHZhcmlhdGlvbj1cInByaW1hcnlcIiBpY29uPXs8UmlnaHRMaW5rIC8+fT5cclxuICAgICAgICBSZWFkIG1vcmVcclxuICAgICAgPC9CdXR0b24+XHJcbiAgICAgIDxCdXR0b24gdmFyaWF0aW9uPVwic2Vjb25kYXJ5XCIgaWNvbj17PERvd25sb2FkIC8+fT5cclxuICAgICAgICBEb3dubG9hZFxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgICAgPEJ1dHRvbiB2YXJpYXRpb249XCJvdXRsaW5lZFwiIGljb249ezxEb3duIC8+fT5cclxuICAgICAgICBTaG93IG1vcmVcclxuICAgICAgPC9CdXR0b24+XHJcbiAgICAgIDxCdXR0b24gdmFyaWF0aW9uPVwic2Vjb25kYXJ5XCIgaWNvbj17PExlZnRBcnJvdyAvPn0gaWNvbkFsaWduPVwibGVmdFwiPlxyXG4gICAgICAgIEdvIGJhY2tcclxuICAgICAgPC9CdXR0b24+XHJcbiAgICA8L1NjZW5lQ29udGFpbmVyPlxyXG4gICAge01kYFxyXG5+fn5qc3hcclxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQGRmZHMtc2hhcmVkL3JlYWN0LWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgeyBMZWZ0QXJyb3cgfSBmcm9tICdAZGZkcy1zaGFyZWQvaWNvbnMnO1xyXG5cclxuPEJ1dHRvbiB2YXJpYXRpb249XCJzZWNvbmRhcnlcIiBpY29uPXs8TGVmdEFycm93IC8+fSBpY29uQWxpZ249XCJsZWZ0XCI+XHJcbiAgR28gYmFja1xyXG48L0J1dHRvbj5cclxufn5+XHJcbmB9XHJcbiAgICB7TWRgXHJcbiMjIE92ZXJmbG93XHJcbkRlZmF1bHRzIHRvIGVsbGlwc2lzIHdoZW4gdGhlIGNvbnRlbnQgb3ZlcmZsb3dzIHRoZSB3aWR0aC5cclxuYH1cclxuICAgIDxTY2VuZUNvbnRhaW5lcj5cclxuICAgICAgPEJ1dHRvblxyXG4gICAgICAgIHZhcmlhdGlvbj1cInNlY29uZGFyeVwiXHJcbiAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICB3aWR0aDogMjAwcHg7XHJcbiAgICAgICAgYH1cclxuICAgICAgPlxyXG4gICAgICAgIEZpeGVkIHdpZHRoIGJ1dHRvbiB3aXRoIGxvbmcgdGV4dFxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgICAgPEJ1dHRvblxyXG4gICAgICAgIHZhcmlhdGlvbj1cInNlY29uZGFyeVwiXHJcbiAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICB3aWR0aDogMjAwcHg7XHJcbiAgICAgICAgYH1cclxuICAgICAgICBpY29uPXs8UmlnaHRMaW5rIC8+fVxyXG4gICAgICAgIGRpc2FibGVkXHJcbiAgICAgID5cclxuICAgICAgICBGaXhlZCB3aWR0aCBidXR0b24gd2l0aCBsb25nIHRleHRcclxuICAgICAgPC9CdXR0b24+XHJcbiAgICA8L1NjZW5lQ29udGFpbmVyPlxyXG4gICAge01kYFxyXG4jIyBDdXN0b20gc3R5bGVzXHJcbkl0J3MgcG9zc2libGUgdG8gY3VzdG9taXplIHRoZSBzdHlsZXNcclxuYH1cclxuICAgIDxTY2VuZUNvbnRhaW5lcj5cclxuICAgICAgPEN1c3RvbUJ1dHRvbiBpY29uPXs8UmlnaHRMaW5rIC8+fT5GaXhlZCB3aWR0aCBidXR0b24gd2l0aCBsb25nIHRleHQ8L0N1c3RvbUJ1dHRvbj5cclxuICAgICAgPEN1c3RvbUJ1dHRvbiBzdWJtaXR0aW5nIGljb249ezxSaWdodExpbmsgLz59IGRpc2FibGVkPlxyXG4gICAgICAgIEZpeGVkIHdpZHRoIGJ1dHRvbiB3aXRoIGxvbmcgdGV4dFxyXG4gICAgICA8L0N1c3RvbUJ1dHRvbj5cclxuICAgICAgPEN1c3RvbUJ1dHRvbiBpY29uPXs8UmlnaHRMaW5rIC8+fSBkaXNhYmxlZD5cclxuICAgICAgICBGaXhlZCB3aWR0aCBidXR0b24gd2l0aCBsb25nIHRleHRcclxuICAgICAgPC9DdXN0b21CdXR0b24+XHJcbiAgICA8L1NjZW5lQ29udGFpbmVyPlxyXG4gICAge01kYFxyXG5+fn5qc3hcclxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQGRmZHMtc2hhcmVkL3JlYWN0LWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgeyBSaWdodExpbmsgfSBmcm9tICdAZGZkcy1zaGFyZWQvaWNvbnMnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCdcclxuXHJcbmNvbnN0IEN1c3RvbUJ1dHRvbiA9IHN0eWxlZChCdXR0b24pXFxgXHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHBhZGRpbmc6ICR7cmVtKDEwKX07XHJcbiAgd2lkdGg6IDIyMHB4O1xyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBsaW5lLWhlaWdodDogMS4yO1xyXG5cXGA7XHJcblxyXG48Q3VzdG9tQnV0dG9uIGljb249ezxSaWdodExpbmsgLz59PlxyXG4gIEZpeGVkIHdpZHRoIGJ1dHRvbiB3aXRoIGxvbmcgdGV4dFxyXG48L0N1c3RvbUJ1dHRvbj5cclxufn5+XHJcbmB9XHJcbiAgPC9kaXY+XHJcbikpXHJcbiJdfQ== */"));

var _ref = process.env.NODE_ENV === "production" ? {
  name: "1domaf0",
  styles: "width:200px;"
} : {
  name: "1domaf0",
  styles: "width:200px;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnN0b3JpZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9IZ0IiLCJmaWxlIjoiLi4vLi4vc3JjL2J1dHRvbi9CdXR0b24uc3Rvcmllcy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7IHN0b3JpZXNPZiB9IGZyb20gJ0BzdG9yeWJvb2svcmVhY3QnXHJcbmltcG9ydCB7IHdpdGhLbm9icyB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24ta25vYnMnXHJcbmltcG9ydCBCdXR0b24gZnJvbSAnLi9CdXR0b24nXHJcbmltcG9ydCBjc3MgZnJvbSAnQGVtb3Rpb24vY3NzJ1xyXG5pbXBvcnQgeyBEb3dubG9hZCwgUmlnaHRMaW5rLCBEb3duLCBMZWZ0QXJyb3cgfSBmcm9tICdAZGZkcy1zaGFyZWQvaWNvbnMnXHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJ1xyXG5pbXBvcnQgeyBCdXR0b25WYXJpYXRpb24gfSBmcm9tICcuL0Jhc2VCdXR0b24nXHJcbmltcG9ydCB7IHJlbSB9IGZyb20gJy4uL3N0eWxlcy9yZW0nXHJcbmltcG9ydCB7IE1kIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NyaXB0cy9tYXJrZG93bi9NZCdcclxuXHJcbmNvbnN0IHN0b3JpZXMgPSBzdG9yaWVzT2YoJ1VJfEJ1dHRvbnMnLCBtb2R1bGUpXHJcbnN0b3JpZXMuYWRkRGVjb3JhdG9yKHdpdGhLbm9icylcclxuc3Rvcmllcy5hZGRQYXJhbWV0ZXJzKHsgb3B0aW9uczogeyBzZWxlY3RlZFBhbmVsOiAnc3Rvcnlib29rL2tub2JzL3BhbmVsJyB9IH0pXHJcblxyXG5jb25zdCBTY2VuZUNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgJiA+ICoge1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG4gIH1cclxuYFxyXG5jb25zdCBTY2VuZSA9ICh7IHZhcmlhdGlvbiB9OiB7IHZhcmlhdGlvbjogQnV0dG9uVmFyaWF0aW9uIH0pID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPFNjZW5lQ29udGFpbmVyPlxyXG4gICAgICA8QnV0dG9uIHZhcmlhdGlvbj17dmFyaWF0aW9ufT5CdXR0b248L0J1dHRvbj5cclxuICAgICAgPEJ1dHRvbiB2YXJpYXRpb249e3ZhcmlhdGlvbn0gc3VibWl0dGluZyBkaXNhYmxlZD5cclxuICAgICAgICBCdXR0b25cclxuICAgICAgPC9CdXR0b24+XHJcbiAgICAgIDxCdXR0b24gdmFyaWF0aW9uPXt2YXJpYXRpb259IGRpc2FibGVkPlxyXG4gICAgICAgIEJ1dHRvblxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgIDwvU2NlbmVDb250YWluZXI+XHJcbiAgKVxyXG59XHJcblxyXG5jb25zdCBDdXN0b21CdXR0b24gPSBzdHlsZWQoQnV0dG9uKWBcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgcGFkZGluZzogJHtyZW0oMTApfTtcclxuICB3aWR0aDogMjIwcHg7XHJcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjI7XHJcbmBcclxuXHJcbnN0b3JpZXMuYWRkKCdCdXR0b24nLCAoKSA9PiAoXHJcbiAgPGRpdlxyXG4gICAgY3NzPXtjc3NgXHJcbiAgICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBgfVxyXG4gID5cclxuICAgIHtNZGBcclxuIyBCdXR0b25cclxuVHJpZ2dlciBhY3Rpb24gd2hlbiBjbGlja2VkLlxyXG5cclxuXFxgQnV0dG9uXFxgIGhhcyBmaXhlZCBcXGBoZWlnaHRcXGAgb2YgNDBweCAoNTBweCBvbiBtb2JpbGUpIHdpdGggbm8gd3JhcHBpbmcgaW5zaWRlLlxyXG4gIGB9XHJcbiAgICA8QnV0dG9uPkJ1dHRvbjwvQnV0dG9uPlxyXG4gICAge01kYFxyXG5+fn5qc3hcclxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQGRmZHMtc2hhcmVkL3JlYWN0LWNvbXBvbmVudHMnO1xyXG5cclxuPEJ1dHRvbj5CdXR0b248L0J1dHRvbj5cclxufn5+XHJcbmB9XHJcbiAgICB7TWRgXHJcbiMjIFZhcmlhdGlvbnNcclxuVGhlIFxcYHZhcmlhdGlvblxcYCBwcm9wIGFjY2VwdHMgdGhlIGZvbGxvd2luZyB2YWx1ZXM6IFxcYHByaW1hcnlcXGAsIFxcYHNlY29uZGFyeVxcYCwgXFxgb3V0bGluZWRcXGAsIFxcYHRleHRcXGBcclxuYH1cclxuICAgIDxTY2VuZSB2YXJpYXRpb249XCJwcmltYXJ5XCIgLz5cclxuICAgIDxTY2VuZSB2YXJpYXRpb249XCJzZWNvbmRhcnlcIiAvPlxyXG4gICAgPFNjZW5lIHZhcmlhdGlvbj1cIm91dGxpbmVkXCIgLz5cclxuICAgIDxTY2VuZSB2YXJpYXRpb249XCJ0ZXh0XCIgLz5cclxuXHJcbiAgICB7TWRgXHJcbiMjIFdpdGggaWNvbnNcclxuVGhlIFxcYGljb25cXGAgcHJvcCBjYW4gYmUgdXNlZCB0byBhZGQgYW4gaWNvbi4gQWxpZ25tZW50IGlzIGNvbnRyb2xsZWQgd2l0aCB0aGUgXFxgaWNvbkFsaWduXFxgIHByb3AuXHJcbiAgICAgIGB9XHJcblxyXG4gICAgPFNjZW5lQ29udGFpbmVyPlxyXG4gICAgICA8QnV0dG9uIHZhcmlhdGlvbj1cInByaW1hcnlcIiBpY29uPXs8UmlnaHRMaW5rIC8+fT5cclxuICAgICAgICBSZWFkIG1vcmVcclxuICAgICAgPC9CdXR0b24+XHJcbiAgICAgIDxCdXR0b24gdmFyaWF0aW9uPVwic2Vjb25kYXJ5XCIgaWNvbj17PERvd25sb2FkIC8+fT5cclxuICAgICAgICBEb3dubG9hZFxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgICAgPEJ1dHRvbiB2YXJpYXRpb249XCJvdXRsaW5lZFwiIGljb249ezxEb3duIC8+fT5cclxuICAgICAgICBTaG93IG1vcmVcclxuICAgICAgPC9CdXR0b24+XHJcbiAgICAgIDxCdXR0b24gdmFyaWF0aW9uPVwic2Vjb25kYXJ5XCIgaWNvbj17PExlZnRBcnJvdyAvPn0gaWNvbkFsaWduPVwibGVmdFwiPlxyXG4gICAgICAgIEdvIGJhY2tcclxuICAgICAgPC9CdXR0b24+XHJcbiAgICA8L1NjZW5lQ29udGFpbmVyPlxyXG4gICAge01kYFxyXG5+fn5qc3hcclxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQGRmZHMtc2hhcmVkL3JlYWN0LWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgeyBMZWZ0QXJyb3cgfSBmcm9tICdAZGZkcy1zaGFyZWQvaWNvbnMnO1xyXG5cclxuPEJ1dHRvbiB2YXJpYXRpb249XCJzZWNvbmRhcnlcIiBpY29uPXs8TGVmdEFycm93IC8+fSBpY29uQWxpZ249XCJsZWZ0XCI+XHJcbiAgR28gYmFja1xyXG48L0J1dHRvbj5cclxufn5+XHJcbmB9XHJcbiAgICB7TWRgXHJcbiMjIE92ZXJmbG93XHJcbkRlZmF1bHRzIHRvIGVsbGlwc2lzIHdoZW4gdGhlIGNvbnRlbnQgb3ZlcmZsb3dzIHRoZSB3aWR0aC5cclxuYH1cclxuICAgIDxTY2VuZUNvbnRhaW5lcj5cclxuICAgICAgPEJ1dHRvblxyXG4gICAgICAgIHZhcmlhdGlvbj1cInNlY29uZGFyeVwiXHJcbiAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICB3aWR0aDogMjAwcHg7XHJcbiAgICAgICAgYH1cclxuICAgICAgPlxyXG4gICAgICAgIEZpeGVkIHdpZHRoIGJ1dHRvbiB3aXRoIGxvbmcgdGV4dFxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgICAgPEJ1dHRvblxyXG4gICAgICAgIHZhcmlhdGlvbj1cInNlY29uZGFyeVwiXHJcbiAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICB3aWR0aDogMjAwcHg7XHJcbiAgICAgICAgYH1cclxuICAgICAgICBpY29uPXs8UmlnaHRMaW5rIC8+fVxyXG4gICAgICAgIGRpc2FibGVkXHJcbiAgICAgID5cclxuICAgICAgICBGaXhlZCB3aWR0aCBidXR0b24gd2l0aCBsb25nIHRleHRcclxuICAgICAgPC9CdXR0b24+XHJcbiAgICA8L1NjZW5lQ29udGFpbmVyPlxyXG4gICAge01kYFxyXG4jIyBDdXN0b20gc3R5bGVzXHJcbkl0J3MgcG9zc2libGUgdG8gY3VzdG9taXplIHRoZSBzdHlsZXNcclxuYH1cclxuICAgIDxTY2VuZUNvbnRhaW5lcj5cclxuICAgICAgPEN1c3RvbUJ1dHRvbiBpY29uPXs8UmlnaHRMaW5rIC8+fT5GaXhlZCB3aWR0aCBidXR0b24gd2l0aCBsb25nIHRleHQ8L0N1c3RvbUJ1dHRvbj5cclxuICAgICAgPEN1c3RvbUJ1dHRvbiBzdWJtaXR0aW5nIGljb249ezxSaWdodExpbmsgLz59IGRpc2FibGVkPlxyXG4gICAgICAgIEZpeGVkIHdpZHRoIGJ1dHRvbiB3aXRoIGxvbmcgdGV4dFxyXG4gICAgICA8L0N1c3RvbUJ1dHRvbj5cclxuICAgICAgPEN1c3RvbUJ1dHRvbiBpY29uPXs8UmlnaHRMaW5rIC8+fSBkaXNhYmxlZD5cclxuICAgICAgICBGaXhlZCB3aWR0aCBidXR0b24gd2l0aCBsb25nIHRleHRcclxuICAgICAgPC9DdXN0b21CdXR0b24+XHJcbiAgICA8L1NjZW5lQ29udGFpbmVyPlxyXG4gICAge01kYFxyXG5+fn5qc3hcclxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQGRmZHMtc2hhcmVkL3JlYWN0LWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgeyBSaWdodExpbmsgfSBmcm9tICdAZGZkcy1zaGFyZWQvaWNvbnMnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCdcclxuXHJcbmNvbnN0IEN1c3RvbUJ1dHRvbiA9IHN0eWxlZChCdXR0b24pXFxgXHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHBhZGRpbmc6ICR7cmVtKDEwKX07XHJcbiAgd2lkdGg6IDIyMHB4O1xyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBsaW5lLWhlaWdodDogMS4yO1xyXG5cXGA7XHJcblxyXG48Q3VzdG9tQnV0dG9uIGljb249ezxSaWdodExpbmsgLz59PlxyXG4gIEZpeGVkIHdpZHRoIGJ1dHRvbiB3aXRoIGxvbmcgdGV4dFxyXG48L0N1c3RvbUJ1dHRvbj5cclxufn5+XHJcbmB9XHJcbiAgPC9kaXY+XHJcbikpXHJcbiJdfQ== */"
};

var _ref2 = process.env.NODE_ENV === "production" ? {
  name: "1domaf0",
  styles: "width:200px;"
} : {
  name: "1domaf0",
  styles: "width:200px;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnN0b3JpZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRHZ0IiLCJmaWxlIjoiLi4vLi4vc3JjL2J1dHRvbi9CdXR0b24uc3Rvcmllcy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7IHN0b3JpZXNPZiB9IGZyb20gJ0BzdG9yeWJvb2svcmVhY3QnXHJcbmltcG9ydCB7IHdpdGhLbm9icyB9IGZyb20gJ0BzdG9yeWJvb2svYWRkb24ta25vYnMnXHJcbmltcG9ydCBCdXR0b24gZnJvbSAnLi9CdXR0b24nXHJcbmltcG9ydCBjc3MgZnJvbSAnQGVtb3Rpb24vY3NzJ1xyXG5pbXBvcnQgeyBEb3dubG9hZCwgUmlnaHRMaW5rLCBEb3duLCBMZWZ0QXJyb3cgfSBmcm9tICdAZGZkcy1zaGFyZWQvaWNvbnMnXHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJ1xyXG5pbXBvcnQgeyBCdXR0b25WYXJpYXRpb24gfSBmcm9tICcuL0Jhc2VCdXR0b24nXHJcbmltcG9ydCB7IHJlbSB9IGZyb20gJy4uL3N0eWxlcy9yZW0nXHJcbmltcG9ydCB7IE1kIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2NyaXB0cy9tYXJrZG93bi9NZCdcclxuXHJcbmNvbnN0IHN0b3JpZXMgPSBzdG9yaWVzT2YoJ1VJfEJ1dHRvbnMnLCBtb2R1bGUpXHJcbnN0b3JpZXMuYWRkRGVjb3JhdG9yKHdpdGhLbm9icylcclxuc3Rvcmllcy5hZGRQYXJhbWV0ZXJzKHsgb3B0aW9uczogeyBzZWxlY3RlZFBhbmVsOiAnc3Rvcnlib29rL2tub2JzL3BhbmVsJyB9IH0pXHJcblxyXG5jb25zdCBTY2VuZUNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgJiA+ICoge1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG4gIH1cclxuYFxyXG5jb25zdCBTY2VuZSA9ICh7IHZhcmlhdGlvbiB9OiB7IHZhcmlhdGlvbjogQnV0dG9uVmFyaWF0aW9uIH0pID0+IHtcclxuICByZXR1cm4gKFxyXG4gICAgPFNjZW5lQ29udGFpbmVyPlxyXG4gICAgICA8QnV0dG9uIHZhcmlhdGlvbj17dmFyaWF0aW9ufT5CdXR0b248L0J1dHRvbj5cclxuICAgICAgPEJ1dHRvbiB2YXJpYXRpb249e3ZhcmlhdGlvbn0gc3VibWl0dGluZyBkaXNhYmxlZD5cclxuICAgICAgICBCdXR0b25cclxuICAgICAgPC9CdXR0b24+XHJcbiAgICAgIDxCdXR0b24gdmFyaWF0aW9uPXt2YXJpYXRpb259IGRpc2FibGVkPlxyXG4gICAgICAgIEJ1dHRvblxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgIDwvU2NlbmVDb250YWluZXI+XHJcbiAgKVxyXG59XHJcblxyXG5jb25zdCBDdXN0b21CdXR0b24gPSBzdHlsZWQoQnV0dG9uKWBcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgcGFkZGluZzogJHtyZW0oMTApfTtcclxuICB3aWR0aDogMjIwcHg7XHJcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjI7XHJcbmBcclxuXHJcbnN0b3JpZXMuYWRkKCdCdXR0b24nLCAoKSA9PiAoXHJcbiAgPGRpdlxyXG4gICAgY3NzPXtjc3NgXHJcbiAgICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBgfVxyXG4gID5cclxuICAgIHtNZGBcclxuIyBCdXR0b25cclxuVHJpZ2dlciBhY3Rpb24gd2hlbiBjbGlja2VkLlxyXG5cclxuXFxgQnV0dG9uXFxgIGhhcyBmaXhlZCBcXGBoZWlnaHRcXGAgb2YgNDBweCAoNTBweCBvbiBtb2JpbGUpIHdpdGggbm8gd3JhcHBpbmcgaW5zaWRlLlxyXG4gIGB9XHJcbiAgICA8QnV0dG9uPkJ1dHRvbjwvQnV0dG9uPlxyXG4gICAge01kYFxyXG5+fn5qc3hcclxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQGRmZHMtc2hhcmVkL3JlYWN0LWNvbXBvbmVudHMnO1xyXG5cclxuPEJ1dHRvbj5CdXR0b248L0J1dHRvbj5cclxufn5+XHJcbmB9XHJcbiAgICB7TWRgXHJcbiMjIFZhcmlhdGlvbnNcclxuVGhlIFxcYHZhcmlhdGlvblxcYCBwcm9wIGFjY2VwdHMgdGhlIGZvbGxvd2luZyB2YWx1ZXM6IFxcYHByaW1hcnlcXGAsIFxcYHNlY29uZGFyeVxcYCwgXFxgb3V0bGluZWRcXGAsIFxcYHRleHRcXGBcclxuYH1cclxuICAgIDxTY2VuZSB2YXJpYXRpb249XCJwcmltYXJ5XCIgLz5cclxuICAgIDxTY2VuZSB2YXJpYXRpb249XCJzZWNvbmRhcnlcIiAvPlxyXG4gICAgPFNjZW5lIHZhcmlhdGlvbj1cIm91dGxpbmVkXCIgLz5cclxuICAgIDxTY2VuZSB2YXJpYXRpb249XCJ0ZXh0XCIgLz5cclxuXHJcbiAgICB7TWRgXHJcbiMjIFdpdGggaWNvbnNcclxuVGhlIFxcYGljb25cXGAgcHJvcCBjYW4gYmUgdXNlZCB0byBhZGQgYW4gaWNvbi4gQWxpZ25tZW50IGlzIGNvbnRyb2xsZWQgd2l0aCB0aGUgXFxgaWNvbkFsaWduXFxgIHByb3AuXHJcbiAgICAgIGB9XHJcblxyXG4gICAgPFNjZW5lQ29udGFpbmVyPlxyXG4gICAgICA8QnV0dG9uIHZhcmlhdGlvbj1cInByaW1hcnlcIiBpY29uPXs8UmlnaHRMaW5rIC8+fT5cclxuICAgICAgICBSZWFkIG1vcmVcclxuICAgICAgPC9CdXR0b24+XHJcbiAgICAgIDxCdXR0b24gdmFyaWF0aW9uPVwic2Vjb25kYXJ5XCIgaWNvbj17PERvd25sb2FkIC8+fT5cclxuICAgICAgICBEb3dubG9hZFxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgICAgPEJ1dHRvbiB2YXJpYXRpb249XCJvdXRsaW5lZFwiIGljb249ezxEb3duIC8+fT5cclxuICAgICAgICBTaG93IG1vcmVcclxuICAgICAgPC9CdXR0b24+XHJcbiAgICAgIDxCdXR0b24gdmFyaWF0aW9uPVwic2Vjb25kYXJ5XCIgaWNvbj17PExlZnRBcnJvdyAvPn0gaWNvbkFsaWduPVwibGVmdFwiPlxyXG4gICAgICAgIEdvIGJhY2tcclxuICAgICAgPC9CdXR0b24+XHJcbiAgICA8L1NjZW5lQ29udGFpbmVyPlxyXG4gICAge01kYFxyXG5+fn5qc3hcclxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQGRmZHMtc2hhcmVkL3JlYWN0LWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgeyBMZWZ0QXJyb3cgfSBmcm9tICdAZGZkcy1zaGFyZWQvaWNvbnMnO1xyXG5cclxuPEJ1dHRvbiB2YXJpYXRpb249XCJzZWNvbmRhcnlcIiBpY29uPXs8TGVmdEFycm93IC8+fSBpY29uQWxpZ249XCJsZWZ0XCI+XHJcbiAgR28gYmFja1xyXG48L0J1dHRvbj5cclxufn5+XHJcbmB9XHJcbiAgICB7TWRgXHJcbiMjIE92ZXJmbG93XHJcbkRlZmF1bHRzIHRvIGVsbGlwc2lzIHdoZW4gdGhlIGNvbnRlbnQgb3ZlcmZsb3dzIHRoZSB3aWR0aC5cclxuYH1cclxuICAgIDxTY2VuZUNvbnRhaW5lcj5cclxuICAgICAgPEJ1dHRvblxyXG4gICAgICAgIHZhcmlhdGlvbj1cInNlY29uZGFyeVwiXHJcbiAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICB3aWR0aDogMjAwcHg7XHJcbiAgICAgICAgYH1cclxuICAgICAgPlxyXG4gICAgICAgIEZpeGVkIHdpZHRoIGJ1dHRvbiB3aXRoIGxvbmcgdGV4dFxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgICAgPEJ1dHRvblxyXG4gICAgICAgIHZhcmlhdGlvbj1cInNlY29uZGFyeVwiXHJcbiAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICB3aWR0aDogMjAwcHg7XHJcbiAgICAgICAgYH1cclxuICAgICAgICBpY29uPXs8UmlnaHRMaW5rIC8+fVxyXG4gICAgICAgIGRpc2FibGVkXHJcbiAgICAgID5cclxuICAgICAgICBGaXhlZCB3aWR0aCBidXR0b24gd2l0aCBsb25nIHRleHRcclxuICAgICAgPC9CdXR0b24+XHJcbiAgICA8L1NjZW5lQ29udGFpbmVyPlxyXG4gICAge01kYFxyXG4jIyBDdXN0b20gc3R5bGVzXHJcbkl0J3MgcG9zc2libGUgdG8gY3VzdG9taXplIHRoZSBzdHlsZXNcclxuYH1cclxuICAgIDxTY2VuZUNvbnRhaW5lcj5cclxuICAgICAgPEN1c3RvbUJ1dHRvbiBpY29uPXs8UmlnaHRMaW5rIC8+fT5GaXhlZCB3aWR0aCBidXR0b24gd2l0aCBsb25nIHRleHQ8L0N1c3RvbUJ1dHRvbj5cclxuICAgICAgPEN1c3RvbUJ1dHRvbiBzdWJtaXR0aW5nIGljb249ezxSaWdodExpbmsgLz59IGRpc2FibGVkPlxyXG4gICAgICAgIEZpeGVkIHdpZHRoIGJ1dHRvbiB3aXRoIGxvbmcgdGV4dFxyXG4gICAgICA8L0N1c3RvbUJ1dHRvbj5cclxuICAgICAgPEN1c3RvbUJ1dHRvbiBpY29uPXs8UmlnaHRMaW5rIC8+fSBkaXNhYmxlZD5cclxuICAgICAgICBGaXhlZCB3aWR0aCBidXR0b24gd2l0aCBsb25nIHRleHRcclxuICAgICAgPC9DdXN0b21CdXR0b24+XHJcbiAgICA8L1NjZW5lQ29udGFpbmVyPlxyXG4gICAge01kYFxyXG5+fn5qc3hcclxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQGRmZHMtc2hhcmVkL3JlYWN0LWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgeyBSaWdodExpbmsgfSBmcm9tICdAZGZkcy1zaGFyZWQvaWNvbnMnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCdcclxuXHJcbmNvbnN0IEN1c3RvbUJ1dHRvbiA9IHN0eWxlZChCdXR0b24pXFxgXHJcbiAgaGVpZ2h0OiBhdXRvO1xyXG4gIHBhZGRpbmc6ICR7cmVtKDEwKX07XHJcbiAgd2lkdGg6IDIyMHB4O1xyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBsaW5lLWhlaWdodDogMS4yO1xyXG5cXGA7XHJcblxyXG48Q3VzdG9tQnV0dG9uIGljb249ezxSaWdodExpbmsgLz59PlxyXG4gIEZpeGVkIHdpZHRoIGJ1dHRvbiB3aXRoIGxvbmcgdGV4dFxyXG48L0N1c3RvbUJ1dHRvbj5cclxufn5+XHJcbmB9XHJcbiAgPC9kaXY+XHJcbikpXHJcbiJdfQ== */"
};

var _ref3 = process.env.NODE_ENV === "production" ? {
  name: "1ruxp1v",
  styles: "padding:20px;"
} : {
  name: "1ruxp1v",
  styles: "padding:20px;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnN0b3JpZXMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZDWSIsImZpbGUiOiIuLi8uLi9zcmMvYnV0dG9uL0J1dHRvbi5zdG9yaWVzLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHsgc3Rvcmllc09mIH0gZnJvbSAnQHN0b3J5Ym9vay9yZWFjdCdcclxuaW1wb3J0IHsgd2l0aEtub2JzIH0gZnJvbSAnQHN0b3J5Ym9vay9hZGRvbi1rbm9icydcclxuaW1wb3J0IEJ1dHRvbiBmcm9tICcuL0J1dHRvbidcclxuaW1wb3J0IGNzcyBmcm9tICdAZW1vdGlvbi9jc3MnXHJcbmltcG9ydCB7IERvd25sb2FkLCBSaWdodExpbmssIERvd24sIExlZnRBcnJvdyB9IGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucydcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnXHJcbmltcG9ydCB7IEJ1dHRvblZhcmlhdGlvbiB9IGZyb20gJy4vQmFzZUJ1dHRvbidcclxuaW1wb3J0IHsgcmVtIH0gZnJvbSAnLi4vc3R5bGVzL3JlbSdcclxuaW1wb3J0IHsgTWQgfSBmcm9tICcuLi8uLi8uLi8uLi9zY3JpcHRzL21hcmtkb3duL01kJ1xyXG5cclxuY29uc3Qgc3RvcmllcyA9IHN0b3JpZXNPZignVUl8QnV0dG9ucycsIG1vZHVsZSlcclxuc3Rvcmllcy5hZGREZWNvcmF0b3Iod2l0aEtub2JzKVxyXG5zdG9yaWVzLmFkZFBhcmFtZXRlcnMoeyBvcHRpb25zOiB7IHNlbGVjdGVkUGFuZWw6ICdzdG9yeWJvb2sva25vYnMvcGFuZWwnIH0gfSlcclxuXHJcbmNvbnN0IFNjZW5lQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICAmID4gKiB7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbiAgfVxyXG5gXHJcbmNvbnN0IFNjZW5lID0gKHsgdmFyaWF0aW9uIH06IHsgdmFyaWF0aW9uOiBCdXR0b25WYXJpYXRpb24gfSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8U2NlbmVDb250YWluZXI+XHJcbiAgICAgIDxCdXR0b24gdmFyaWF0aW9uPXt2YXJpYXRpb259PkJ1dHRvbjwvQnV0dG9uPlxyXG4gICAgICA8QnV0dG9uIHZhcmlhdGlvbj17dmFyaWF0aW9ufSBzdWJtaXR0aW5nIGRpc2FibGVkPlxyXG4gICAgICAgIEJ1dHRvblxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgICAgPEJ1dHRvbiB2YXJpYXRpb249e3ZhcmlhdGlvbn0gZGlzYWJsZWQ+XHJcbiAgICAgICAgQnV0dG9uXHJcbiAgICAgIDwvQnV0dG9uPlxyXG4gICAgPC9TY2VuZUNvbnRhaW5lcj5cclxuICApXHJcbn1cclxuXHJcbmNvbnN0IEN1c3RvbUJ1dHRvbiA9IHN0eWxlZChCdXR0b24pYFxyXG4gIGhlaWdodDogYXV0bztcclxuICBwYWRkaW5nOiAke3JlbSgxMCl9O1xyXG4gIHdpZHRoOiAyMjBweDtcclxuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgbGluZS1oZWlnaHQ6IDEuMjtcclxuYFxyXG5cclxuc3Rvcmllcy5hZGQoJ0J1dHRvbicsICgpID0+IChcclxuICA8ZGl2XHJcbiAgICBjc3M9e2Nzc2BcclxuICAgICAgcGFkZGluZzogMjBweDtcclxuICAgIGB9XHJcbiAgPlxyXG4gICAge01kYFxyXG4jIEJ1dHRvblxyXG5UcmlnZ2VyIGFjdGlvbiB3aGVuIGNsaWNrZWQuXHJcblxyXG5cXGBCdXR0b25cXGAgaGFzIGZpeGVkIFxcYGhlaWdodFxcYCBvZiA0MHB4ICg1MHB4IG9uIG1vYmlsZSkgd2l0aCBubyB3cmFwcGluZyBpbnNpZGUuXHJcbiAgYH1cclxuICAgIDxCdXR0b24+QnV0dG9uPC9CdXR0b24+XHJcbiAgICB7TWRgXHJcbn5+fmpzeFxyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICdAZGZkcy1zaGFyZWQvcmVhY3QtY29tcG9uZW50cyc7XHJcblxyXG48QnV0dG9uPkJ1dHRvbjwvQnV0dG9uPlxyXG5+fn5cclxuYH1cclxuICAgIHtNZGBcclxuIyMgVmFyaWF0aW9uc1xyXG5UaGUgXFxgdmFyaWF0aW9uXFxgIHByb3AgYWNjZXB0cyB0aGUgZm9sbG93aW5nIHZhbHVlczogXFxgcHJpbWFyeVxcYCwgXFxgc2Vjb25kYXJ5XFxgLCBcXGBvdXRsaW5lZFxcYCwgXFxgdGV4dFxcYFxyXG5gfVxyXG4gICAgPFNjZW5lIHZhcmlhdGlvbj1cInByaW1hcnlcIiAvPlxyXG4gICAgPFNjZW5lIHZhcmlhdGlvbj1cInNlY29uZGFyeVwiIC8+XHJcbiAgICA8U2NlbmUgdmFyaWF0aW9uPVwib3V0bGluZWRcIiAvPlxyXG4gICAgPFNjZW5lIHZhcmlhdGlvbj1cInRleHRcIiAvPlxyXG5cclxuICAgIHtNZGBcclxuIyMgV2l0aCBpY29uc1xyXG5UaGUgXFxgaWNvblxcYCBwcm9wIGNhbiBiZSB1c2VkIHRvIGFkZCBhbiBpY29uLiBBbGlnbm1lbnQgaXMgY29udHJvbGxlZCB3aXRoIHRoZSBcXGBpY29uQWxpZ25cXGAgcHJvcC5cclxuICAgICAgYH1cclxuXHJcbiAgICA8U2NlbmVDb250YWluZXI+XHJcbiAgICAgIDxCdXR0b24gdmFyaWF0aW9uPVwicHJpbWFyeVwiIGljb249ezxSaWdodExpbmsgLz59PlxyXG4gICAgICAgIFJlYWQgbW9yZVxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgICAgPEJ1dHRvbiB2YXJpYXRpb249XCJzZWNvbmRhcnlcIiBpY29uPXs8RG93bmxvYWQgLz59PlxyXG4gICAgICAgIERvd25sb2FkXHJcbiAgICAgIDwvQnV0dG9uPlxyXG4gICAgICA8QnV0dG9uIHZhcmlhdGlvbj1cIm91dGxpbmVkXCIgaWNvbj17PERvd24gLz59PlxyXG4gICAgICAgIFNob3cgbW9yZVxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgICAgPEJ1dHRvbiB2YXJpYXRpb249XCJzZWNvbmRhcnlcIiBpY29uPXs8TGVmdEFycm93IC8+fSBpY29uQWxpZ249XCJsZWZ0XCI+XHJcbiAgICAgICAgR28gYmFja1xyXG4gICAgICA8L0J1dHRvbj5cclxuICAgIDwvU2NlbmVDb250YWluZXI+XHJcbiAgICB7TWRgXHJcbn5+fmpzeFxyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICdAZGZkcy1zaGFyZWQvcmVhY3QtY29tcG9uZW50cyc7XHJcbmltcG9ydCB7IExlZnRBcnJvdyB9IGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucyc7XHJcblxyXG48QnV0dG9uIHZhcmlhdGlvbj1cInNlY29uZGFyeVwiIGljb249ezxMZWZ0QXJyb3cgLz59IGljb25BbGlnbj1cImxlZnRcIj5cclxuICBHbyBiYWNrXHJcbjwvQnV0dG9uPlxyXG5+fn5cclxuYH1cclxuICAgIHtNZGBcclxuIyMgT3ZlcmZsb3dcclxuRGVmYXVsdHMgdG8gZWxsaXBzaXMgd2hlbiB0aGUgY29udGVudCBvdmVyZmxvd3MgdGhlIHdpZHRoLlxyXG5gfVxyXG4gICAgPFNjZW5lQ29udGFpbmVyPlxyXG4gICAgICA8QnV0dG9uXHJcbiAgICAgICAgdmFyaWF0aW9uPVwic2Vjb25kYXJ5XCJcclxuICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICBgfVxyXG4gICAgICA+XHJcbiAgICAgICAgRml4ZWQgd2lkdGggYnV0dG9uIHdpdGggbG9uZyB0ZXh0XHJcbiAgICAgIDwvQnV0dG9uPlxyXG4gICAgICA8QnV0dG9uXHJcbiAgICAgICAgdmFyaWF0aW9uPVwic2Vjb25kYXJ5XCJcclxuICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICBgfVxyXG4gICAgICAgIGljb249ezxSaWdodExpbmsgLz59XHJcbiAgICAgICAgZGlzYWJsZWRcclxuICAgICAgPlxyXG4gICAgICAgIEZpeGVkIHdpZHRoIGJ1dHRvbiB3aXRoIGxvbmcgdGV4dFxyXG4gICAgICA8L0J1dHRvbj5cclxuICAgIDwvU2NlbmVDb250YWluZXI+XHJcbiAgICB7TWRgXHJcbiMjIEN1c3RvbSBzdHlsZXNcclxuSXQncyBwb3NzaWJsZSB0byBjdXN0b21pemUgdGhlIHN0eWxlc1xyXG5gfVxyXG4gICAgPFNjZW5lQ29udGFpbmVyPlxyXG4gICAgICA8Q3VzdG9tQnV0dG9uIGljb249ezxSaWdodExpbmsgLz59PkZpeGVkIHdpZHRoIGJ1dHRvbiB3aXRoIGxvbmcgdGV4dDwvQ3VzdG9tQnV0dG9uPlxyXG4gICAgICA8Q3VzdG9tQnV0dG9uIHN1Ym1pdHRpbmcgaWNvbj17PFJpZ2h0TGluayAvPn0gZGlzYWJsZWQ+XHJcbiAgICAgICAgRml4ZWQgd2lkdGggYnV0dG9uIHdpdGggbG9uZyB0ZXh0XHJcbiAgICAgIDwvQ3VzdG9tQnV0dG9uPlxyXG4gICAgICA8Q3VzdG9tQnV0dG9uIGljb249ezxSaWdodExpbmsgLz59IGRpc2FibGVkPlxyXG4gICAgICAgIEZpeGVkIHdpZHRoIGJ1dHRvbiB3aXRoIGxvbmcgdGV4dFxyXG4gICAgICA8L0N1c3RvbUJ1dHRvbj5cclxuICAgIDwvU2NlbmVDb250YWluZXI+XHJcbiAgICB7TWRgXHJcbn5+fmpzeFxyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICdAZGZkcy1zaGFyZWQvcmVhY3QtY29tcG9uZW50cyc7XHJcbmltcG9ydCB7IFJpZ2h0TGluayB9IGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJ1xyXG5cclxuY29uc3QgQ3VzdG9tQnV0dG9uID0gc3R5bGVkKEJ1dHRvbilcXGBcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgcGFkZGluZzogJHtyZW0oMTApfTtcclxuICB3aWR0aDogMjIwcHg7XHJcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjI7XHJcblxcYDtcclxuXHJcbjxDdXN0b21CdXR0b24gaWNvbj17PFJpZ2h0TGluayAvPn0+XHJcbiAgRml4ZWQgd2lkdGggYnV0dG9uIHdpdGggbG9uZyB0ZXh0XHJcbjwvQ3VzdG9tQnV0dG9uPlxyXG5+fn5cclxuYH1cclxuICA8L2Rpdj5cclxuKSlcclxuIl19 */"
};

stories.add('Button', function () {
  return ___EmotionJSX("div", {
    css: _ref3
  }, Md(_templateObject()), ___EmotionJSX(Button, null, "Button"), Md(_templateObject2()), Md(_templateObject3()), ___EmotionJSX(Scene, {
    variation: "primary"
  }), ___EmotionJSX(Scene, {
    variation: "secondary"
  }), ___EmotionJSX(Scene, {
    variation: "outlined"
  }), ___EmotionJSX(Scene, {
    variation: "text"
  }), Md(_templateObject4()), ___EmotionJSX(SceneContainer, null, ___EmotionJSX(Button, {
    variation: "primary",
    icon: ___EmotionJSX(RightLink, null)
  }, "Read more"), ___EmotionJSX(Button, {
    variation: "secondary",
    icon: ___EmotionJSX(Download, null)
  }, "Download"), ___EmotionJSX(Button, {
    variation: "outlined",
    icon: ___EmotionJSX(Down, null)
  }, "Show more"), ___EmotionJSX(Button, {
    variation: "secondary",
    icon: ___EmotionJSX(LeftArrow, null),
    iconAlign: "left"
  }, "Go back")), Md(_templateObject5()), Md(_templateObject6()), ___EmotionJSX(SceneContainer, null, ___EmotionJSX(Button, {
    variation: "secondary",
    css: _ref2
  }, "Fixed width button with long text"), ___EmotionJSX(Button, {
    variation: "secondary",
    css: _ref,
    icon: ___EmotionJSX(RightLink, null),
    disabled: true
  }, "Fixed width button with long text")), Md(_templateObject7()), ___EmotionJSX(SceneContainer, null, ___EmotionJSX(CustomButton, {
    icon: ___EmotionJSX(RightLink, null)
  }, "Fixed width button with long text"), ___EmotionJSX(CustomButton, {
    submitting: true,
    icon: ___EmotionJSX(RightLink, null),
    disabled: true
  }, "Fixed width button with long text"), ___EmotionJSX(CustomButton, {
    icon: ___EmotionJSX(RightLink, null),
    disabled: true
  }, "Fixed width button with long text")), Md(_templateObject8(), rem(10)));
});