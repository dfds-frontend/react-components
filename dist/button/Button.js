import _styled from "@emotion/styled-base";
import { jsx as ___EmotionJSX } from "@emotion/core";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import { palette } from '@dfds-shared/colors';
import { primaryButtonStyles, secondaryButtonStyles, outlinedButtonStyles } from './button-style';
import { focusOutline } from '../styles/style-helpers';
import { BaseButton } from './BaseButton';
import { CenteredSpinner } from '../spinner/Spinner';
import { rem } from '../styles/rem';

var Base =
/*#__PURE__*/
_styled(BaseButton, {
  target: "e12mes5x0"
})("max-width:100%;width:", function (p) {
  return p.fillWidth ? '100%' : undefined;
}, ";font-size:1rem;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;transition:background-color 0.2s ease-out,color 0.2s ease-out;", focusOutline(palette.secondaryBlack.primary), ";&[disabled]{pointer-events:none;}:not([aria-busy='true']){&[disabled]{background:", palette.inactiveGrey.primary, ";color:#fff;}}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQndEIiwiZmlsZSI6Ii4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnXHJcbmltcG9ydCB7IHBhbGV0dGUgfSBmcm9tICdAZGZkcy1zaGFyZWQvY29sb3JzJ1xyXG5pbXBvcnQgeyBwcmltYXJ5QnV0dG9uU3R5bGVzLCBzZWNvbmRhcnlCdXR0b25TdHlsZXMsIG91dGxpbmVkQnV0dG9uU3R5bGVzIH0gZnJvbSAnLi9idXR0b24tc3R5bGUnXHJcbmltcG9ydCB7IGZvY3VzT3V0bGluZSB9IGZyb20gJy4uL3N0eWxlcy9zdHlsZS1oZWxwZXJzJ1xyXG5pbXBvcnQgeyBCYXNlQnV0dG9uLCBCYXNlQnV0dG9uUHJvcHMsIEJ1dHRvblZhcmlhdGlvbiwgQnV0dG9uVmFyaWF0aW9uUHJvcHMgfSBmcm9tICcuL0Jhc2VCdXR0b24nXHJcbmltcG9ydCB7IENlbnRlcmVkU3Bpbm5lciB9IGZyb20gJy4uL3NwaW5uZXIvU3Bpbm5lcidcclxuaW1wb3J0IHsgcmVtIH0gZnJvbSAnLi4vc3R5bGVzL3JlbSdcclxuXHJcbnR5cGUgQnV0dG9uUHJvcHMgPSBCYXNlQnV0dG9uUHJvcHMgJlxyXG4gIEJ1dHRvblZhcmlhdGlvblByb3BzICYge1xyXG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXHJcbiAgICByZXBsYWNlPzogYm9vbGVhblxyXG4gICAgc3VibWl0dGluZz86IGJvb2xlYW5cclxuICAgIGZpbGxXaWR0aD86IGJvb2xlYW5cclxuICAgIGljb24/OiBSZWFjdC5SZWFjdE5vZGVcclxuICAgIGljb25BbGlnbj86ICdsZWZ0JyB8ICdyaWdodCdcclxuICB9XHJcblxyXG5jb25zdCBCYXNlID0gc3R5bGVkKEJhc2VCdXR0b24pPHsgZmlsbFdpZHRoPzogYm9vbGVhbiB9PmBcclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgd2lkdGg6ICR7cCA9PiAocC5maWxsV2lkdGggPyAnMTAwJScgOiB1bmRlZmluZWQpfTtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLW91dCwgY29sb3IgMC4ycyBlYXNlLW91dDtcclxuICAke2ZvY3VzT3V0bGluZShwYWxldHRlLnNlY29uZGFyeUJsYWNrLnByaW1hcnkpfTtcclxuXHJcbiAgJltkaXNhYmxlZF0ge1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgfVxyXG5cclxuICA6bm90KFthcmlhLWJ1c3k9J3RydWUnXSkge1xyXG4gICAgJltkaXNhYmxlZF0ge1xyXG4gICAgICBiYWNrZ3JvdW5kOiAke3BhbGV0dGUuaW5hY3RpdmVHcmV5LnByaW1hcnl9O1xyXG4gICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH1cclxuICB9XHJcbmBcclxuXHJcbmNvbnN0IFRleHRTcGFuID0gc3R5bGVkLnNwYW48eyBzdWJtaXR0aW5nPzogYm9vbGVhbiB9PmBcclxuICBvcGFjaXR5OiAke3AgPT4gcC5zdWJtaXR0aW5nICYmIDB9O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgZmxleC1ncm93OiAxO1xyXG4gIG9yZGVyOiAxO1xyXG5gXHJcblxyXG5jb25zdCBJY29uU3BhbiA9IHN0eWxlZC5zcGFuPHsgc3VibWl0dGluZz86IGJvb2xlYW47IGljb25BbGlnbjogJ2xlZnQnIHwgJ3JpZ2h0JyB9PmBcclxuICBvcGFjaXR5OiAke3AgPT4gcC5zdWJtaXR0aW5nICYmIDB9O1xyXG4gIG1hcmdpbi1sZWZ0OiAke3AgPT4gcC5pY29uQWxpZ24gIT09ICdsZWZ0JyAmJiByZW0oMTApfTtcclxuICBtYXJnaW4tcmlnaHQ6ICR7cCA9PiBwLmljb25BbGlnbiA9PT0gJ2xlZnQnICYmIHJlbSgxMCl9O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvcmRlcjogJHtwID0+IChwLmljb25BbGlnbiA9PT0gJ2xlZnQnID8gMCA6IDEpfTtcclxuICB0b3A6ICR7cmVtKC0xKX07IC8qIG1laCAtIG1ha2VzIHRoZSBpY29uIGxvb2sgbW9yZSBjZW50ZXIgYWxpZ25lZCAqL1xyXG5gXHJcblxyXG5jb25zdCBQcmltYXJ5QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gICR7cHJpbWFyeUJ1dHRvblN0eWxlc31cclxuYFxyXG5cclxuY29uc3QgU2Vjb25kYXJ5QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gICR7c2Vjb25kYXJ5QnV0dG9uU3R5bGVzfVxyXG5gXHJcblxyXG5jb25zdCBPdXRsaW5lZEJ1dHRvbiA9IHN0eWxlZChCYXNlKWBcclxuICAke291dGxpbmVkQnV0dG9uU3R5bGVzfVxyXG5gXHJcblxyXG5jb25zdCBUZXh0QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gIGNvbG9yOiAke3BhbGV0dGUuYWN0aW9uQmx1ZS5wcmltYXJ5fTtcclxuICBiYWNrZ3JvdW5kOiAke3BhbGV0dGUuYWN0aW9uQmx1ZS5saWdodH07XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICR7cGFsZXR0ZS5hY3Rpb25CbHVlLmhvdmVyfTtcclxuICB9XHJcbmBcclxuXHJcbmZ1bmN0aW9uIGdldEJ1dHRvbih0eXBlOiBCdXR0b25WYXJpYXRpb24pIHtcclxuICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgIGRlZmF1bHQ6XHJcbiAgICBjYXNlICdwcmltYXJ5JzpcclxuICAgICAgcmV0dXJuIFByaW1hcnlCdXR0b25cclxuICAgIGNhc2UgJ3NlY29uZGFyeSc6XHJcbiAgICAgIHJldHVybiBTZWNvbmRhcnlCdXR0b25cclxuICAgIGNhc2UgJ291dGxpbmVkJzpcclxuICAgICAgcmV0dXJuIE91dGxpbmVkQnV0dG9uXHJcbiAgICBjYXNlICd0ZXh0JzpcclxuICAgICAgcmV0dXJuIFRleHRCdXR0b25cclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IEJ1dHRvbjogUmVhY3QuRkM8QnV0dG9uUHJvcHM+ID0gKHtcclxuICB2YXJpYXRpb24sXHJcbiAgY2hpbGRyZW4sXHJcbiAgc3VibWl0dGluZyxcclxuICBpY29uLFxyXG4gIGljb25BbGlnbiA9ICdyaWdodCcsXHJcbiAgdGl0bGUsXHJcbiAgLi4ucmVzdFxyXG59KSA9PiB7XHJcbiAgY29uc3QgQnV0dG9uVmFyaWF0aW9uID0gZ2V0QnV0dG9uKHZhcmlhdGlvbiA9PT0gdW5kZWZpbmVkID8gJ3ByaW1hcnknIDogdmFyaWF0aW9uKVxyXG4gIGNvbnN0IGRpc3BsYXlUaXRsZSA9IHRpdGxlIHx8ICh0eXBlb2YgY2hpbGRyZW4gPT09ICdzdHJpbmcnICYmIGNoaWxkcmVuKSB8fCAnJ1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPEJ1dHRvblZhcmlhdGlvbiBkaXNhYmxlZD17c3VibWl0dGluZ30gey4uLnJlc3R9IGFyaWEtYnVzeT17c3VibWl0dGluZ30gdGl0bGU9e2Rpc3BsYXlUaXRsZX0+XHJcbiAgICAgIDxUZXh0U3BhbiBzdWJtaXR0aW5nPXtzdWJtaXR0aW5nfT57Y2hpbGRyZW59PC9UZXh0U3Bhbj5cclxuICAgICAge2ljb24gJiYgKFxyXG4gICAgICAgIDxJY29uU3BhbiBzdWJtaXR0aW5nPXtzdWJtaXR0aW5nfSBpY29uQWxpZ249e2ljb25BbGlnbn0+XHJcbiAgICAgICAgICB7aWNvbn1cclxuICAgICAgICA8L0ljb25TcGFuPlxyXG4gICAgICApfVxyXG4gICAgICB7c3VibWl0dGluZyA/IDxDZW50ZXJlZFNwaW5uZXIgc2l6ZT1cIjEuNXJlbVwiIGluc3RhbnQgLz4gOiBudWxsfVxyXG4gICAgPC9CdXR0b25WYXJpYXRpb24+XHJcbiAgKVxyXG59XHJcblxyXG5CdXR0b24uZGVmYXVsdFByb3BzID0ge1xyXG4gIHZhcmlhdGlvbjogJ3ByaW1hcnknLFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCdXR0b25cclxuIl19 */"));

var TextSpan = _styled("span", {
  target: "e12mes5x1"
})("opacity:", function (p) {
  return p.submitting && 0;
}, ";overflow:hidden;text-overflow:ellipsis;flex-grow:1;order:1;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5Q3NEIiwiZmlsZSI6Ii4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnXHJcbmltcG9ydCB7IHBhbGV0dGUgfSBmcm9tICdAZGZkcy1zaGFyZWQvY29sb3JzJ1xyXG5pbXBvcnQgeyBwcmltYXJ5QnV0dG9uU3R5bGVzLCBzZWNvbmRhcnlCdXR0b25TdHlsZXMsIG91dGxpbmVkQnV0dG9uU3R5bGVzIH0gZnJvbSAnLi9idXR0b24tc3R5bGUnXHJcbmltcG9ydCB7IGZvY3VzT3V0bGluZSB9IGZyb20gJy4uL3N0eWxlcy9zdHlsZS1oZWxwZXJzJ1xyXG5pbXBvcnQgeyBCYXNlQnV0dG9uLCBCYXNlQnV0dG9uUHJvcHMsIEJ1dHRvblZhcmlhdGlvbiwgQnV0dG9uVmFyaWF0aW9uUHJvcHMgfSBmcm9tICcuL0Jhc2VCdXR0b24nXHJcbmltcG9ydCB7IENlbnRlcmVkU3Bpbm5lciB9IGZyb20gJy4uL3NwaW5uZXIvU3Bpbm5lcidcclxuaW1wb3J0IHsgcmVtIH0gZnJvbSAnLi4vc3R5bGVzL3JlbSdcclxuXHJcbnR5cGUgQnV0dG9uUHJvcHMgPSBCYXNlQnV0dG9uUHJvcHMgJlxyXG4gIEJ1dHRvblZhcmlhdGlvblByb3BzICYge1xyXG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXHJcbiAgICByZXBsYWNlPzogYm9vbGVhblxyXG4gICAgc3VibWl0dGluZz86IGJvb2xlYW5cclxuICAgIGZpbGxXaWR0aD86IGJvb2xlYW5cclxuICAgIGljb24/OiBSZWFjdC5SZWFjdE5vZGVcclxuICAgIGljb25BbGlnbj86ICdsZWZ0JyB8ICdyaWdodCdcclxuICB9XHJcblxyXG5jb25zdCBCYXNlID0gc3R5bGVkKEJhc2VCdXR0b24pPHsgZmlsbFdpZHRoPzogYm9vbGVhbiB9PmBcclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgd2lkdGg6ICR7cCA9PiAocC5maWxsV2lkdGggPyAnMTAwJScgOiB1bmRlZmluZWQpfTtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLW91dCwgY29sb3IgMC4ycyBlYXNlLW91dDtcclxuICAke2ZvY3VzT3V0bGluZShwYWxldHRlLnNlY29uZGFyeUJsYWNrLnByaW1hcnkpfTtcclxuXHJcbiAgJltkaXNhYmxlZF0ge1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgfVxyXG5cclxuICA6bm90KFthcmlhLWJ1c3k9J3RydWUnXSkge1xyXG4gICAgJltkaXNhYmxlZF0ge1xyXG4gICAgICBiYWNrZ3JvdW5kOiAke3BhbGV0dGUuaW5hY3RpdmVHcmV5LnByaW1hcnl9O1xyXG4gICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH1cclxuICB9XHJcbmBcclxuXHJcbmNvbnN0IFRleHRTcGFuID0gc3R5bGVkLnNwYW48eyBzdWJtaXR0aW5nPzogYm9vbGVhbiB9PmBcclxuICBvcGFjaXR5OiAke3AgPT4gcC5zdWJtaXR0aW5nICYmIDB9O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgZmxleC1ncm93OiAxO1xyXG4gIG9yZGVyOiAxO1xyXG5gXHJcblxyXG5jb25zdCBJY29uU3BhbiA9IHN0eWxlZC5zcGFuPHsgc3VibWl0dGluZz86IGJvb2xlYW47IGljb25BbGlnbjogJ2xlZnQnIHwgJ3JpZ2h0JyB9PmBcclxuICBvcGFjaXR5OiAke3AgPT4gcC5zdWJtaXR0aW5nICYmIDB9O1xyXG4gIG1hcmdpbi1sZWZ0OiAke3AgPT4gcC5pY29uQWxpZ24gIT09ICdsZWZ0JyAmJiByZW0oMTApfTtcclxuICBtYXJnaW4tcmlnaHQ6ICR7cCA9PiBwLmljb25BbGlnbiA9PT0gJ2xlZnQnICYmIHJlbSgxMCl9O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvcmRlcjogJHtwID0+IChwLmljb25BbGlnbiA9PT0gJ2xlZnQnID8gMCA6IDEpfTtcclxuICB0b3A6ICR7cmVtKC0xKX07IC8qIG1laCAtIG1ha2VzIHRoZSBpY29uIGxvb2sgbW9yZSBjZW50ZXIgYWxpZ25lZCAqL1xyXG5gXHJcblxyXG5jb25zdCBQcmltYXJ5QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gICR7cHJpbWFyeUJ1dHRvblN0eWxlc31cclxuYFxyXG5cclxuY29uc3QgU2Vjb25kYXJ5QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gICR7c2Vjb25kYXJ5QnV0dG9uU3R5bGVzfVxyXG5gXHJcblxyXG5jb25zdCBPdXRsaW5lZEJ1dHRvbiA9IHN0eWxlZChCYXNlKWBcclxuICAke291dGxpbmVkQnV0dG9uU3R5bGVzfVxyXG5gXHJcblxyXG5jb25zdCBUZXh0QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gIGNvbG9yOiAke3BhbGV0dGUuYWN0aW9uQmx1ZS5wcmltYXJ5fTtcclxuICBiYWNrZ3JvdW5kOiAke3BhbGV0dGUuYWN0aW9uQmx1ZS5saWdodH07XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICR7cGFsZXR0ZS5hY3Rpb25CbHVlLmhvdmVyfTtcclxuICB9XHJcbmBcclxuXHJcbmZ1bmN0aW9uIGdldEJ1dHRvbih0eXBlOiBCdXR0b25WYXJpYXRpb24pIHtcclxuICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgIGRlZmF1bHQ6XHJcbiAgICBjYXNlICdwcmltYXJ5JzpcclxuICAgICAgcmV0dXJuIFByaW1hcnlCdXR0b25cclxuICAgIGNhc2UgJ3NlY29uZGFyeSc6XHJcbiAgICAgIHJldHVybiBTZWNvbmRhcnlCdXR0b25cclxuICAgIGNhc2UgJ291dGxpbmVkJzpcclxuICAgICAgcmV0dXJuIE91dGxpbmVkQnV0dG9uXHJcbiAgICBjYXNlICd0ZXh0JzpcclxuICAgICAgcmV0dXJuIFRleHRCdXR0b25cclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IEJ1dHRvbjogUmVhY3QuRkM8QnV0dG9uUHJvcHM+ID0gKHtcclxuICB2YXJpYXRpb24sXHJcbiAgY2hpbGRyZW4sXHJcbiAgc3VibWl0dGluZyxcclxuICBpY29uLFxyXG4gIGljb25BbGlnbiA9ICdyaWdodCcsXHJcbiAgdGl0bGUsXHJcbiAgLi4ucmVzdFxyXG59KSA9PiB7XHJcbiAgY29uc3QgQnV0dG9uVmFyaWF0aW9uID0gZ2V0QnV0dG9uKHZhcmlhdGlvbiA9PT0gdW5kZWZpbmVkID8gJ3ByaW1hcnknIDogdmFyaWF0aW9uKVxyXG4gIGNvbnN0IGRpc3BsYXlUaXRsZSA9IHRpdGxlIHx8ICh0eXBlb2YgY2hpbGRyZW4gPT09ICdzdHJpbmcnICYmIGNoaWxkcmVuKSB8fCAnJ1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPEJ1dHRvblZhcmlhdGlvbiBkaXNhYmxlZD17c3VibWl0dGluZ30gey4uLnJlc3R9IGFyaWEtYnVzeT17c3VibWl0dGluZ30gdGl0bGU9e2Rpc3BsYXlUaXRsZX0+XHJcbiAgICAgIDxUZXh0U3BhbiBzdWJtaXR0aW5nPXtzdWJtaXR0aW5nfT57Y2hpbGRyZW59PC9UZXh0U3Bhbj5cclxuICAgICAge2ljb24gJiYgKFxyXG4gICAgICAgIDxJY29uU3BhbiBzdWJtaXR0aW5nPXtzdWJtaXR0aW5nfSBpY29uQWxpZ249e2ljb25BbGlnbn0+XHJcbiAgICAgICAgICB7aWNvbn1cclxuICAgICAgICA8L0ljb25TcGFuPlxyXG4gICAgICApfVxyXG4gICAgICB7c3VibWl0dGluZyA/IDxDZW50ZXJlZFNwaW5uZXIgc2l6ZT1cIjEuNXJlbVwiIGluc3RhbnQgLz4gOiBudWxsfVxyXG4gICAgPC9CdXR0b25WYXJpYXRpb24+XHJcbiAgKVxyXG59XHJcblxyXG5CdXR0b24uZGVmYXVsdFByb3BzID0ge1xyXG4gIHZhcmlhdGlvbjogJ3ByaW1hcnknLFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCdXR0b25cclxuIl19 */"));

var IconSpan = _styled("span", {
  target: "e12mes5x2"
})("opacity:", function (p) {
  return p.submitting && 0;
}, ";margin-left:", function (p) {
  return p.iconAlign !== 'left' && rem(10);
}, ";margin-right:", function (p) {
  return p.iconAlign === 'left' && rem(10);
}, ";position:relative;order:", function (p) {
  return p.iconAlign === 'left' ? 0 : 1;
}, ";top:", rem(-1), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpRG1GIiwiZmlsZSI6Ii4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnXHJcbmltcG9ydCB7IHBhbGV0dGUgfSBmcm9tICdAZGZkcy1zaGFyZWQvY29sb3JzJ1xyXG5pbXBvcnQgeyBwcmltYXJ5QnV0dG9uU3R5bGVzLCBzZWNvbmRhcnlCdXR0b25TdHlsZXMsIG91dGxpbmVkQnV0dG9uU3R5bGVzIH0gZnJvbSAnLi9idXR0b24tc3R5bGUnXHJcbmltcG9ydCB7IGZvY3VzT3V0bGluZSB9IGZyb20gJy4uL3N0eWxlcy9zdHlsZS1oZWxwZXJzJ1xyXG5pbXBvcnQgeyBCYXNlQnV0dG9uLCBCYXNlQnV0dG9uUHJvcHMsIEJ1dHRvblZhcmlhdGlvbiwgQnV0dG9uVmFyaWF0aW9uUHJvcHMgfSBmcm9tICcuL0Jhc2VCdXR0b24nXHJcbmltcG9ydCB7IENlbnRlcmVkU3Bpbm5lciB9IGZyb20gJy4uL3NwaW5uZXIvU3Bpbm5lcidcclxuaW1wb3J0IHsgcmVtIH0gZnJvbSAnLi4vc3R5bGVzL3JlbSdcclxuXHJcbnR5cGUgQnV0dG9uUHJvcHMgPSBCYXNlQnV0dG9uUHJvcHMgJlxyXG4gIEJ1dHRvblZhcmlhdGlvblByb3BzICYge1xyXG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXHJcbiAgICByZXBsYWNlPzogYm9vbGVhblxyXG4gICAgc3VibWl0dGluZz86IGJvb2xlYW5cclxuICAgIGZpbGxXaWR0aD86IGJvb2xlYW5cclxuICAgIGljb24/OiBSZWFjdC5SZWFjdE5vZGVcclxuICAgIGljb25BbGlnbj86ICdsZWZ0JyB8ICdyaWdodCdcclxuICB9XHJcblxyXG5jb25zdCBCYXNlID0gc3R5bGVkKEJhc2VCdXR0b24pPHsgZmlsbFdpZHRoPzogYm9vbGVhbiB9PmBcclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgd2lkdGg6ICR7cCA9PiAocC5maWxsV2lkdGggPyAnMTAwJScgOiB1bmRlZmluZWQpfTtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLW91dCwgY29sb3IgMC4ycyBlYXNlLW91dDtcclxuICAke2ZvY3VzT3V0bGluZShwYWxldHRlLnNlY29uZGFyeUJsYWNrLnByaW1hcnkpfTtcclxuXHJcbiAgJltkaXNhYmxlZF0ge1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgfVxyXG5cclxuICA6bm90KFthcmlhLWJ1c3k9J3RydWUnXSkge1xyXG4gICAgJltkaXNhYmxlZF0ge1xyXG4gICAgICBiYWNrZ3JvdW5kOiAke3BhbGV0dGUuaW5hY3RpdmVHcmV5LnByaW1hcnl9O1xyXG4gICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH1cclxuICB9XHJcbmBcclxuXHJcbmNvbnN0IFRleHRTcGFuID0gc3R5bGVkLnNwYW48eyBzdWJtaXR0aW5nPzogYm9vbGVhbiB9PmBcclxuICBvcGFjaXR5OiAke3AgPT4gcC5zdWJtaXR0aW5nICYmIDB9O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgZmxleC1ncm93OiAxO1xyXG4gIG9yZGVyOiAxO1xyXG5gXHJcblxyXG5jb25zdCBJY29uU3BhbiA9IHN0eWxlZC5zcGFuPHsgc3VibWl0dGluZz86IGJvb2xlYW47IGljb25BbGlnbjogJ2xlZnQnIHwgJ3JpZ2h0JyB9PmBcclxuICBvcGFjaXR5OiAke3AgPT4gcC5zdWJtaXR0aW5nICYmIDB9O1xyXG4gIG1hcmdpbi1sZWZ0OiAke3AgPT4gcC5pY29uQWxpZ24gIT09ICdsZWZ0JyAmJiByZW0oMTApfTtcclxuICBtYXJnaW4tcmlnaHQ6ICR7cCA9PiBwLmljb25BbGlnbiA9PT0gJ2xlZnQnICYmIHJlbSgxMCl9O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvcmRlcjogJHtwID0+IChwLmljb25BbGlnbiA9PT0gJ2xlZnQnID8gMCA6IDEpfTtcclxuICB0b3A6ICR7cmVtKC0xKX07IC8qIG1laCAtIG1ha2VzIHRoZSBpY29uIGxvb2sgbW9yZSBjZW50ZXIgYWxpZ25lZCAqL1xyXG5gXHJcblxyXG5jb25zdCBQcmltYXJ5QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gICR7cHJpbWFyeUJ1dHRvblN0eWxlc31cclxuYFxyXG5cclxuY29uc3QgU2Vjb25kYXJ5QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gICR7c2Vjb25kYXJ5QnV0dG9uU3R5bGVzfVxyXG5gXHJcblxyXG5jb25zdCBPdXRsaW5lZEJ1dHRvbiA9IHN0eWxlZChCYXNlKWBcclxuICAke291dGxpbmVkQnV0dG9uU3R5bGVzfVxyXG5gXHJcblxyXG5jb25zdCBUZXh0QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gIGNvbG9yOiAke3BhbGV0dGUuYWN0aW9uQmx1ZS5wcmltYXJ5fTtcclxuICBiYWNrZ3JvdW5kOiAke3BhbGV0dGUuYWN0aW9uQmx1ZS5saWdodH07XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICR7cGFsZXR0ZS5hY3Rpb25CbHVlLmhvdmVyfTtcclxuICB9XHJcbmBcclxuXHJcbmZ1bmN0aW9uIGdldEJ1dHRvbih0eXBlOiBCdXR0b25WYXJpYXRpb24pIHtcclxuICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgIGRlZmF1bHQ6XHJcbiAgICBjYXNlICdwcmltYXJ5JzpcclxuICAgICAgcmV0dXJuIFByaW1hcnlCdXR0b25cclxuICAgIGNhc2UgJ3NlY29uZGFyeSc6XHJcbiAgICAgIHJldHVybiBTZWNvbmRhcnlCdXR0b25cclxuICAgIGNhc2UgJ291dGxpbmVkJzpcclxuICAgICAgcmV0dXJuIE91dGxpbmVkQnV0dG9uXHJcbiAgICBjYXNlICd0ZXh0JzpcclxuICAgICAgcmV0dXJuIFRleHRCdXR0b25cclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IEJ1dHRvbjogUmVhY3QuRkM8QnV0dG9uUHJvcHM+ID0gKHtcclxuICB2YXJpYXRpb24sXHJcbiAgY2hpbGRyZW4sXHJcbiAgc3VibWl0dGluZyxcclxuICBpY29uLFxyXG4gIGljb25BbGlnbiA9ICdyaWdodCcsXHJcbiAgdGl0bGUsXHJcbiAgLi4ucmVzdFxyXG59KSA9PiB7XHJcbiAgY29uc3QgQnV0dG9uVmFyaWF0aW9uID0gZ2V0QnV0dG9uKHZhcmlhdGlvbiA9PT0gdW5kZWZpbmVkID8gJ3ByaW1hcnknIDogdmFyaWF0aW9uKVxyXG4gIGNvbnN0IGRpc3BsYXlUaXRsZSA9IHRpdGxlIHx8ICh0eXBlb2YgY2hpbGRyZW4gPT09ICdzdHJpbmcnICYmIGNoaWxkcmVuKSB8fCAnJ1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPEJ1dHRvblZhcmlhdGlvbiBkaXNhYmxlZD17c3VibWl0dGluZ30gey4uLnJlc3R9IGFyaWEtYnVzeT17c3VibWl0dGluZ30gdGl0bGU9e2Rpc3BsYXlUaXRsZX0+XHJcbiAgICAgIDxUZXh0U3BhbiBzdWJtaXR0aW5nPXtzdWJtaXR0aW5nfT57Y2hpbGRyZW59PC9UZXh0U3Bhbj5cclxuICAgICAge2ljb24gJiYgKFxyXG4gICAgICAgIDxJY29uU3BhbiBzdWJtaXR0aW5nPXtzdWJtaXR0aW5nfSBpY29uQWxpZ249e2ljb25BbGlnbn0+XHJcbiAgICAgICAgICB7aWNvbn1cclxuICAgICAgICA8L0ljb25TcGFuPlxyXG4gICAgICApfVxyXG4gICAgICB7c3VibWl0dGluZyA/IDxDZW50ZXJlZFNwaW5uZXIgc2l6ZT1cIjEuNXJlbVwiIGluc3RhbnQgLz4gOiBudWxsfVxyXG4gICAgPC9CdXR0b25WYXJpYXRpb24+XHJcbiAgKVxyXG59XHJcblxyXG5CdXR0b24uZGVmYXVsdFByb3BzID0ge1xyXG4gIHZhcmlhdGlvbjogJ3ByaW1hcnknLFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCdXR0b25cclxuIl19 */"));

var PrimaryButton =
/*#__PURE__*/
_styled(Base, {
  target: "e12mes5x3"
})(primaryButtonStyles, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwRGtDIiwiZmlsZSI6Ii4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnXHJcbmltcG9ydCB7IHBhbGV0dGUgfSBmcm9tICdAZGZkcy1zaGFyZWQvY29sb3JzJ1xyXG5pbXBvcnQgeyBwcmltYXJ5QnV0dG9uU3R5bGVzLCBzZWNvbmRhcnlCdXR0b25TdHlsZXMsIG91dGxpbmVkQnV0dG9uU3R5bGVzIH0gZnJvbSAnLi9idXR0b24tc3R5bGUnXHJcbmltcG9ydCB7IGZvY3VzT3V0bGluZSB9IGZyb20gJy4uL3N0eWxlcy9zdHlsZS1oZWxwZXJzJ1xyXG5pbXBvcnQgeyBCYXNlQnV0dG9uLCBCYXNlQnV0dG9uUHJvcHMsIEJ1dHRvblZhcmlhdGlvbiwgQnV0dG9uVmFyaWF0aW9uUHJvcHMgfSBmcm9tICcuL0Jhc2VCdXR0b24nXHJcbmltcG9ydCB7IENlbnRlcmVkU3Bpbm5lciB9IGZyb20gJy4uL3NwaW5uZXIvU3Bpbm5lcidcclxuaW1wb3J0IHsgcmVtIH0gZnJvbSAnLi4vc3R5bGVzL3JlbSdcclxuXHJcbnR5cGUgQnV0dG9uUHJvcHMgPSBCYXNlQnV0dG9uUHJvcHMgJlxyXG4gIEJ1dHRvblZhcmlhdGlvblByb3BzICYge1xyXG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXHJcbiAgICByZXBsYWNlPzogYm9vbGVhblxyXG4gICAgc3VibWl0dGluZz86IGJvb2xlYW5cclxuICAgIGZpbGxXaWR0aD86IGJvb2xlYW5cclxuICAgIGljb24/OiBSZWFjdC5SZWFjdE5vZGVcclxuICAgIGljb25BbGlnbj86ICdsZWZ0JyB8ICdyaWdodCdcclxuICB9XHJcblxyXG5jb25zdCBCYXNlID0gc3R5bGVkKEJhc2VCdXR0b24pPHsgZmlsbFdpZHRoPzogYm9vbGVhbiB9PmBcclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgd2lkdGg6ICR7cCA9PiAocC5maWxsV2lkdGggPyAnMTAwJScgOiB1bmRlZmluZWQpfTtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLW91dCwgY29sb3IgMC4ycyBlYXNlLW91dDtcclxuICAke2ZvY3VzT3V0bGluZShwYWxldHRlLnNlY29uZGFyeUJsYWNrLnByaW1hcnkpfTtcclxuXHJcbiAgJltkaXNhYmxlZF0ge1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgfVxyXG5cclxuICA6bm90KFthcmlhLWJ1c3k9J3RydWUnXSkge1xyXG4gICAgJltkaXNhYmxlZF0ge1xyXG4gICAgICBiYWNrZ3JvdW5kOiAke3BhbGV0dGUuaW5hY3RpdmVHcmV5LnByaW1hcnl9O1xyXG4gICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH1cclxuICB9XHJcbmBcclxuXHJcbmNvbnN0IFRleHRTcGFuID0gc3R5bGVkLnNwYW48eyBzdWJtaXR0aW5nPzogYm9vbGVhbiB9PmBcclxuICBvcGFjaXR5OiAke3AgPT4gcC5zdWJtaXR0aW5nICYmIDB9O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgZmxleC1ncm93OiAxO1xyXG4gIG9yZGVyOiAxO1xyXG5gXHJcblxyXG5jb25zdCBJY29uU3BhbiA9IHN0eWxlZC5zcGFuPHsgc3VibWl0dGluZz86IGJvb2xlYW47IGljb25BbGlnbjogJ2xlZnQnIHwgJ3JpZ2h0JyB9PmBcclxuICBvcGFjaXR5OiAke3AgPT4gcC5zdWJtaXR0aW5nICYmIDB9O1xyXG4gIG1hcmdpbi1sZWZ0OiAke3AgPT4gcC5pY29uQWxpZ24gIT09ICdsZWZ0JyAmJiByZW0oMTApfTtcclxuICBtYXJnaW4tcmlnaHQ6ICR7cCA9PiBwLmljb25BbGlnbiA9PT0gJ2xlZnQnICYmIHJlbSgxMCl9O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvcmRlcjogJHtwID0+IChwLmljb25BbGlnbiA9PT0gJ2xlZnQnID8gMCA6IDEpfTtcclxuICB0b3A6ICR7cmVtKC0xKX07IC8qIG1laCAtIG1ha2VzIHRoZSBpY29uIGxvb2sgbW9yZSBjZW50ZXIgYWxpZ25lZCAqL1xyXG5gXHJcblxyXG5jb25zdCBQcmltYXJ5QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gICR7cHJpbWFyeUJ1dHRvblN0eWxlc31cclxuYFxyXG5cclxuY29uc3QgU2Vjb25kYXJ5QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gICR7c2Vjb25kYXJ5QnV0dG9uU3R5bGVzfVxyXG5gXHJcblxyXG5jb25zdCBPdXRsaW5lZEJ1dHRvbiA9IHN0eWxlZChCYXNlKWBcclxuICAke291dGxpbmVkQnV0dG9uU3R5bGVzfVxyXG5gXHJcblxyXG5jb25zdCBUZXh0QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gIGNvbG9yOiAke3BhbGV0dGUuYWN0aW9uQmx1ZS5wcmltYXJ5fTtcclxuICBiYWNrZ3JvdW5kOiAke3BhbGV0dGUuYWN0aW9uQmx1ZS5saWdodH07XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICR7cGFsZXR0ZS5hY3Rpb25CbHVlLmhvdmVyfTtcclxuICB9XHJcbmBcclxuXHJcbmZ1bmN0aW9uIGdldEJ1dHRvbih0eXBlOiBCdXR0b25WYXJpYXRpb24pIHtcclxuICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgIGRlZmF1bHQ6XHJcbiAgICBjYXNlICdwcmltYXJ5JzpcclxuICAgICAgcmV0dXJuIFByaW1hcnlCdXR0b25cclxuICAgIGNhc2UgJ3NlY29uZGFyeSc6XHJcbiAgICAgIHJldHVybiBTZWNvbmRhcnlCdXR0b25cclxuICAgIGNhc2UgJ291dGxpbmVkJzpcclxuICAgICAgcmV0dXJuIE91dGxpbmVkQnV0dG9uXHJcbiAgICBjYXNlICd0ZXh0JzpcclxuICAgICAgcmV0dXJuIFRleHRCdXR0b25cclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IEJ1dHRvbjogUmVhY3QuRkM8QnV0dG9uUHJvcHM+ID0gKHtcclxuICB2YXJpYXRpb24sXHJcbiAgY2hpbGRyZW4sXHJcbiAgc3VibWl0dGluZyxcclxuICBpY29uLFxyXG4gIGljb25BbGlnbiA9ICdyaWdodCcsXHJcbiAgdGl0bGUsXHJcbiAgLi4ucmVzdFxyXG59KSA9PiB7XHJcbiAgY29uc3QgQnV0dG9uVmFyaWF0aW9uID0gZ2V0QnV0dG9uKHZhcmlhdGlvbiA9PT0gdW5kZWZpbmVkID8gJ3ByaW1hcnknIDogdmFyaWF0aW9uKVxyXG4gIGNvbnN0IGRpc3BsYXlUaXRsZSA9IHRpdGxlIHx8ICh0eXBlb2YgY2hpbGRyZW4gPT09ICdzdHJpbmcnICYmIGNoaWxkcmVuKSB8fCAnJ1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPEJ1dHRvblZhcmlhdGlvbiBkaXNhYmxlZD17c3VibWl0dGluZ30gey4uLnJlc3R9IGFyaWEtYnVzeT17c3VibWl0dGluZ30gdGl0bGU9e2Rpc3BsYXlUaXRsZX0+XHJcbiAgICAgIDxUZXh0U3BhbiBzdWJtaXR0aW5nPXtzdWJtaXR0aW5nfT57Y2hpbGRyZW59PC9UZXh0U3Bhbj5cclxuICAgICAge2ljb24gJiYgKFxyXG4gICAgICAgIDxJY29uU3BhbiBzdWJtaXR0aW5nPXtzdWJtaXR0aW5nfSBpY29uQWxpZ249e2ljb25BbGlnbn0+XHJcbiAgICAgICAgICB7aWNvbn1cclxuICAgICAgICA8L0ljb25TcGFuPlxyXG4gICAgICApfVxyXG4gICAgICB7c3VibWl0dGluZyA/IDxDZW50ZXJlZFNwaW5uZXIgc2l6ZT1cIjEuNXJlbVwiIGluc3RhbnQgLz4gOiBudWxsfVxyXG4gICAgPC9CdXR0b25WYXJpYXRpb24+XHJcbiAgKVxyXG59XHJcblxyXG5CdXR0b24uZGVmYXVsdFByb3BzID0ge1xyXG4gIHZhcmlhdGlvbjogJ3ByaW1hcnknLFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCdXR0b25cclxuIl19 */");

var SecondaryButton =
/*#__PURE__*/
_styled(Base, {
  target: "e12mes5x4"
})(secondaryButtonStyles, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4RG9DIiwiZmlsZSI6Ii4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnXHJcbmltcG9ydCB7IHBhbGV0dGUgfSBmcm9tICdAZGZkcy1zaGFyZWQvY29sb3JzJ1xyXG5pbXBvcnQgeyBwcmltYXJ5QnV0dG9uU3R5bGVzLCBzZWNvbmRhcnlCdXR0b25TdHlsZXMsIG91dGxpbmVkQnV0dG9uU3R5bGVzIH0gZnJvbSAnLi9idXR0b24tc3R5bGUnXHJcbmltcG9ydCB7IGZvY3VzT3V0bGluZSB9IGZyb20gJy4uL3N0eWxlcy9zdHlsZS1oZWxwZXJzJ1xyXG5pbXBvcnQgeyBCYXNlQnV0dG9uLCBCYXNlQnV0dG9uUHJvcHMsIEJ1dHRvblZhcmlhdGlvbiwgQnV0dG9uVmFyaWF0aW9uUHJvcHMgfSBmcm9tICcuL0Jhc2VCdXR0b24nXHJcbmltcG9ydCB7IENlbnRlcmVkU3Bpbm5lciB9IGZyb20gJy4uL3NwaW5uZXIvU3Bpbm5lcidcclxuaW1wb3J0IHsgcmVtIH0gZnJvbSAnLi4vc3R5bGVzL3JlbSdcclxuXHJcbnR5cGUgQnV0dG9uUHJvcHMgPSBCYXNlQnV0dG9uUHJvcHMgJlxyXG4gIEJ1dHRvblZhcmlhdGlvblByb3BzICYge1xyXG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXHJcbiAgICByZXBsYWNlPzogYm9vbGVhblxyXG4gICAgc3VibWl0dGluZz86IGJvb2xlYW5cclxuICAgIGZpbGxXaWR0aD86IGJvb2xlYW5cclxuICAgIGljb24/OiBSZWFjdC5SZWFjdE5vZGVcclxuICAgIGljb25BbGlnbj86ICdsZWZ0JyB8ICdyaWdodCdcclxuICB9XHJcblxyXG5jb25zdCBCYXNlID0gc3R5bGVkKEJhc2VCdXR0b24pPHsgZmlsbFdpZHRoPzogYm9vbGVhbiB9PmBcclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgd2lkdGg6ICR7cCA9PiAocC5maWxsV2lkdGggPyAnMTAwJScgOiB1bmRlZmluZWQpfTtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLW91dCwgY29sb3IgMC4ycyBlYXNlLW91dDtcclxuICAke2ZvY3VzT3V0bGluZShwYWxldHRlLnNlY29uZGFyeUJsYWNrLnByaW1hcnkpfTtcclxuXHJcbiAgJltkaXNhYmxlZF0ge1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgfVxyXG5cclxuICA6bm90KFthcmlhLWJ1c3k9J3RydWUnXSkge1xyXG4gICAgJltkaXNhYmxlZF0ge1xyXG4gICAgICBiYWNrZ3JvdW5kOiAke3BhbGV0dGUuaW5hY3RpdmVHcmV5LnByaW1hcnl9O1xyXG4gICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH1cclxuICB9XHJcbmBcclxuXHJcbmNvbnN0IFRleHRTcGFuID0gc3R5bGVkLnNwYW48eyBzdWJtaXR0aW5nPzogYm9vbGVhbiB9PmBcclxuICBvcGFjaXR5OiAke3AgPT4gcC5zdWJtaXR0aW5nICYmIDB9O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgZmxleC1ncm93OiAxO1xyXG4gIG9yZGVyOiAxO1xyXG5gXHJcblxyXG5jb25zdCBJY29uU3BhbiA9IHN0eWxlZC5zcGFuPHsgc3VibWl0dGluZz86IGJvb2xlYW47IGljb25BbGlnbjogJ2xlZnQnIHwgJ3JpZ2h0JyB9PmBcclxuICBvcGFjaXR5OiAke3AgPT4gcC5zdWJtaXR0aW5nICYmIDB9O1xyXG4gIG1hcmdpbi1sZWZ0OiAke3AgPT4gcC5pY29uQWxpZ24gIT09ICdsZWZ0JyAmJiByZW0oMTApfTtcclxuICBtYXJnaW4tcmlnaHQ6ICR7cCA9PiBwLmljb25BbGlnbiA9PT0gJ2xlZnQnICYmIHJlbSgxMCl9O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvcmRlcjogJHtwID0+IChwLmljb25BbGlnbiA9PT0gJ2xlZnQnID8gMCA6IDEpfTtcclxuICB0b3A6ICR7cmVtKC0xKX07IC8qIG1laCAtIG1ha2VzIHRoZSBpY29uIGxvb2sgbW9yZSBjZW50ZXIgYWxpZ25lZCAqL1xyXG5gXHJcblxyXG5jb25zdCBQcmltYXJ5QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gICR7cHJpbWFyeUJ1dHRvblN0eWxlc31cclxuYFxyXG5cclxuY29uc3QgU2Vjb25kYXJ5QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gICR7c2Vjb25kYXJ5QnV0dG9uU3R5bGVzfVxyXG5gXHJcblxyXG5jb25zdCBPdXRsaW5lZEJ1dHRvbiA9IHN0eWxlZChCYXNlKWBcclxuICAke291dGxpbmVkQnV0dG9uU3R5bGVzfVxyXG5gXHJcblxyXG5jb25zdCBUZXh0QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gIGNvbG9yOiAke3BhbGV0dGUuYWN0aW9uQmx1ZS5wcmltYXJ5fTtcclxuICBiYWNrZ3JvdW5kOiAke3BhbGV0dGUuYWN0aW9uQmx1ZS5saWdodH07XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICR7cGFsZXR0ZS5hY3Rpb25CbHVlLmhvdmVyfTtcclxuICB9XHJcbmBcclxuXHJcbmZ1bmN0aW9uIGdldEJ1dHRvbih0eXBlOiBCdXR0b25WYXJpYXRpb24pIHtcclxuICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgIGRlZmF1bHQ6XHJcbiAgICBjYXNlICdwcmltYXJ5JzpcclxuICAgICAgcmV0dXJuIFByaW1hcnlCdXR0b25cclxuICAgIGNhc2UgJ3NlY29uZGFyeSc6XHJcbiAgICAgIHJldHVybiBTZWNvbmRhcnlCdXR0b25cclxuICAgIGNhc2UgJ291dGxpbmVkJzpcclxuICAgICAgcmV0dXJuIE91dGxpbmVkQnV0dG9uXHJcbiAgICBjYXNlICd0ZXh0JzpcclxuICAgICAgcmV0dXJuIFRleHRCdXR0b25cclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IEJ1dHRvbjogUmVhY3QuRkM8QnV0dG9uUHJvcHM+ID0gKHtcclxuICB2YXJpYXRpb24sXHJcbiAgY2hpbGRyZW4sXHJcbiAgc3VibWl0dGluZyxcclxuICBpY29uLFxyXG4gIGljb25BbGlnbiA9ICdyaWdodCcsXHJcbiAgdGl0bGUsXHJcbiAgLi4ucmVzdFxyXG59KSA9PiB7XHJcbiAgY29uc3QgQnV0dG9uVmFyaWF0aW9uID0gZ2V0QnV0dG9uKHZhcmlhdGlvbiA9PT0gdW5kZWZpbmVkID8gJ3ByaW1hcnknIDogdmFyaWF0aW9uKVxyXG4gIGNvbnN0IGRpc3BsYXlUaXRsZSA9IHRpdGxlIHx8ICh0eXBlb2YgY2hpbGRyZW4gPT09ICdzdHJpbmcnICYmIGNoaWxkcmVuKSB8fCAnJ1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPEJ1dHRvblZhcmlhdGlvbiBkaXNhYmxlZD17c3VibWl0dGluZ30gey4uLnJlc3R9IGFyaWEtYnVzeT17c3VibWl0dGluZ30gdGl0bGU9e2Rpc3BsYXlUaXRsZX0+XHJcbiAgICAgIDxUZXh0U3BhbiBzdWJtaXR0aW5nPXtzdWJtaXR0aW5nfT57Y2hpbGRyZW59PC9UZXh0U3Bhbj5cclxuICAgICAge2ljb24gJiYgKFxyXG4gICAgICAgIDxJY29uU3BhbiBzdWJtaXR0aW5nPXtzdWJtaXR0aW5nfSBpY29uQWxpZ249e2ljb25BbGlnbn0+XHJcbiAgICAgICAgICB7aWNvbn1cclxuICAgICAgICA8L0ljb25TcGFuPlxyXG4gICAgICApfVxyXG4gICAgICB7c3VibWl0dGluZyA/IDxDZW50ZXJlZFNwaW5uZXIgc2l6ZT1cIjEuNXJlbVwiIGluc3RhbnQgLz4gOiBudWxsfVxyXG4gICAgPC9CdXR0b25WYXJpYXRpb24+XHJcbiAgKVxyXG59XHJcblxyXG5CdXR0b24uZGVmYXVsdFByb3BzID0ge1xyXG4gIHZhcmlhdGlvbjogJ3ByaW1hcnknLFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCdXR0b25cclxuIl19 */");

var OutlinedButton =
/*#__PURE__*/
_styled(Base, {
  target: "e12mes5x5"
})(outlinedButtonStyles, process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrRW1DIiwiZmlsZSI6Ii4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnXHJcbmltcG9ydCB7IHBhbGV0dGUgfSBmcm9tICdAZGZkcy1zaGFyZWQvY29sb3JzJ1xyXG5pbXBvcnQgeyBwcmltYXJ5QnV0dG9uU3R5bGVzLCBzZWNvbmRhcnlCdXR0b25TdHlsZXMsIG91dGxpbmVkQnV0dG9uU3R5bGVzIH0gZnJvbSAnLi9idXR0b24tc3R5bGUnXHJcbmltcG9ydCB7IGZvY3VzT3V0bGluZSB9IGZyb20gJy4uL3N0eWxlcy9zdHlsZS1oZWxwZXJzJ1xyXG5pbXBvcnQgeyBCYXNlQnV0dG9uLCBCYXNlQnV0dG9uUHJvcHMsIEJ1dHRvblZhcmlhdGlvbiwgQnV0dG9uVmFyaWF0aW9uUHJvcHMgfSBmcm9tICcuL0Jhc2VCdXR0b24nXHJcbmltcG9ydCB7IENlbnRlcmVkU3Bpbm5lciB9IGZyb20gJy4uL3NwaW5uZXIvU3Bpbm5lcidcclxuaW1wb3J0IHsgcmVtIH0gZnJvbSAnLi4vc3R5bGVzL3JlbSdcclxuXHJcbnR5cGUgQnV0dG9uUHJvcHMgPSBCYXNlQnV0dG9uUHJvcHMgJlxyXG4gIEJ1dHRvblZhcmlhdGlvblByb3BzICYge1xyXG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXHJcbiAgICByZXBsYWNlPzogYm9vbGVhblxyXG4gICAgc3VibWl0dGluZz86IGJvb2xlYW5cclxuICAgIGZpbGxXaWR0aD86IGJvb2xlYW5cclxuICAgIGljb24/OiBSZWFjdC5SZWFjdE5vZGVcclxuICAgIGljb25BbGlnbj86ICdsZWZ0JyB8ICdyaWdodCdcclxuICB9XHJcblxyXG5jb25zdCBCYXNlID0gc3R5bGVkKEJhc2VCdXR0b24pPHsgZmlsbFdpZHRoPzogYm9vbGVhbiB9PmBcclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgd2lkdGg6ICR7cCA9PiAocC5maWxsV2lkdGggPyAnMTAwJScgOiB1bmRlZmluZWQpfTtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLW91dCwgY29sb3IgMC4ycyBlYXNlLW91dDtcclxuICAke2ZvY3VzT3V0bGluZShwYWxldHRlLnNlY29uZGFyeUJsYWNrLnByaW1hcnkpfTtcclxuXHJcbiAgJltkaXNhYmxlZF0ge1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgfVxyXG5cclxuICA6bm90KFthcmlhLWJ1c3k9J3RydWUnXSkge1xyXG4gICAgJltkaXNhYmxlZF0ge1xyXG4gICAgICBiYWNrZ3JvdW5kOiAke3BhbGV0dGUuaW5hY3RpdmVHcmV5LnByaW1hcnl9O1xyXG4gICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH1cclxuICB9XHJcbmBcclxuXHJcbmNvbnN0IFRleHRTcGFuID0gc3R5bGVkLnNwYW48eyBzdWJtaXR0aW5nPzogYm9vbGVhbiB9PmBcclxuICBvcGFjaXR5OiAke3AgPT4gcC5zdWJtaXR0aW5nICYmIDB9O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgZmxleC1ncm93OiAxO1xyXG4gIG9yZGVyOiAxO1xyXG5gXHJcblxyXG5jb25zdCBJY29uU3BhbiA9IHN0eWxlZC5zcGFuPHsgc3VibWl0dGluZz86IGJvb2xlYW47IGljb25BbGlnbjogJ2xlZnQnIHwgJ3JpZ2h0JyB9PmBcclxuICBvcGFjaXR5OiAke3AgPT4gcC5zdWJtaXR0aW5nICYmIDB9O1xyXG4gIG1hcmdpbi1sZWZ0OiAke3AgPT4gcC5pY29uQWxpZ24gIT09ICdsZWZ0JyAmJiByZW0oMTApfTtcclxuICBtYXJnaW4tcmlnaHQ6ICR7cCA9PiBwLmljb25BbGlnbiA9PT0gJ2xlZnQnICYmIHJlbSgxMCl9O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvcmRlcjogJHtwID0+IChwLmljb25BbGlnbiA9PT0gJ2xlZnQnID8gMCA6IDEpfTtcclxuICB0b3A6ICR7cmVtKC0xKX07IC8qIG1laCAtIG1ha2VzIHRoZSBpY29uIGxvb2sgbW9yZSBjZW50ZXIgYWxpZ25lZCAqL1xyXG5gXHJcblxyXG5jb25zdCBQcmltYXJ5QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gICR7cHJpbWFyeUJ1dHRvblN0eWxlc31cclxuYFxyXG5cclxuY29uc3QgU2Vjb25kYXJ5QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gICR7c2Vjb25kYXJ5QnV0dG9uU3R5bGVzfVxyXG5gXHJcblxyXG5jb25zdCBPdXRsaW5lZEJ1dHRvbiA9IHN0eWxlZChCYXNlKWBcclxuICAke291dGxpbmVkQnV0dG9uU3R5bGVzfVxyXG5gXHJcblxyXG5jb25zdCBUZXh0QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gIGNvbG9yOiAke3BhbGV0dGUuYWN0aW9uQmx1ZS5wcmltYXJ5fTtcclxuICBiYWNrZ3JvdW5kOiAke3BhbGV0dGUuYWN0aW9uQmx1ZS5saWdodH07XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICR7cGFsZXR0ZS5hY3Rpb25CbHVlLmhvdmVyfTtcclxuICB9XHJcbmBcclxuXHJcbmZ1bmN0aW9uIGdldEJ1dHRvbih0eXBlOiBCdXR0b25WYXJpYXRpb24pIHtcclxuICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgIGRlZmF1bHQ6XHJcbiAgICBjYXNlICdwcmltYXJ5JzpcclxuICAgICAgcmV0dXJuIFByaW1hcnlCdXR0b25cclxuICAgIGNhc2UgJ3NlY29uZGFyeSc6XHJcbiAgICAgIHJldHVybiBTZWNvbmRhcnlCdXR0b25cclxuICAgIGNhc2UgJ291dGxpbmVkJzpcclxuICAgICAgcmV0dXJuIE91dGxpbmVkQnV0dG9uXHJcbiAgICBjYXNlICd0ZXh0JzpcclxuICAgICAgcmV0dXJuIFRleHRCdXR0b25cclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IEJ1dHRvbjogUmVhY3QuRkM8QnV0dG9uUHJvcHM+ID0gKHtcclxuICB2YXJpYXRpb24sXHJcbiAgY2hpbGRyZW4sXHJcbiAgc3VibWl0dGluZyxcclxuICBpY29uLFxyXG4gIGljb25BbGlnbiA9ICdyaWdodCcsXHJcbiAgdGl0bGUsXHJcbiAgLi4ucmVzdFxyXG59KSA9PiB7XHJcbiAgY29uc3QgQnV0dG9uVmFyaWF0aW9uID0gZ2V0QnV0dG9uKHZhcmlhdGlvbiA9PT0gdW5kZWZpbmVkID8gJ3ByaW1hcnknIDogdmFyaWF0aW9uKVxyXG4gIGNvbnN0IGRpc3BsYXlUaXRsZSA9IHRpdGxlIHx8ICh0eXBlb2YgY2hpbGRyZW4gPT09ICdzdHJpbmcnICYmIGNoaWxkcmVuKSB8fCAnJ1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPEJ1dHRvblZhcmlhdGlvbiBkaXNhYmxlZD17c3VibWl0dGluZ30gey4uLnJlc3R9IGFyaWEtYnVzeT17c3VibWl0dGluZ30gdGl0bGU9e2Rpc3BsYXlUaXRsZX0+XHJcbiAgICAgIDxUZXh0U3BhbiBzdWJtaXR0aW5nPXtzdWJtaXR0aW5nfT57Y2hpbGRyZW59PC9UZXh0U3Bhbj5cclxuICAgICAge2ljb24gJiYgKFxyXG4gICAgICAgIDxJY29uU3BhbiBzdWJtaXR0aW5nPXtzdWJtaXR0aW5nfSBpY29uQWxpZ249e2ljb25BbGlnbn0+XHJcbiAgICAgICAgICB7aWNvbn1cclxuICAgICAgICA8L0ljb25TcGFuPlxyXG4gICAgICApfVxyXG4gICAgICB7c3VibWl0dGluZyA/IDxDZW50ZXJlZFNwaW5uZXIgc2l6ZT1cIjEuNXJlbVwiIGluc3RhbnQgLz4gOiBudWxsfVxyXG4gICAgPC9CdXR0b25WYXJpYXRpb24+XHJcbiAgKVxyXG59XHJcblxyXG5CdXR0b24uZGVmYXVsdFByb3BzID0ge1xyXG4gIHZhcmlhdGlvbjogJ3ByaW1hcnknLFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCdXR0b25cclxuIl19 */");

var TextButton =
/*#__PURE__*/
_styled(Base, {
  target: "e12mes5x6"
})("color:", palette.actionBlue.primary, ";background:", palette.actionBlue.light, ";&:hover{color:", palette.actionBlue.hover, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRStCIiwiZmlsZSI6Ii4uLy4uL3NyYy9idXR0b24vQnV0dG9uLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnXHJcbmltcG9ydCB7IHBhbGV0dGUgfSBmcm9tICdAZGZkcy1zaGFyZWQvY29sb3JzJ1xyXG5pbXBvcnQgeyBwcmltYXJ5QnV0dG9uU3R5bGVzLCBzZWNvbmRhcnlCdXR0b25TdHlsZXMsIG91dGxpbmVkQnV0dG9uU3R5bGVzIH0gZnJvbSAnLi9idXR0b24tc3R5bGUnXHJcbmltcG9ydCB7IGZvY3VzT3V0bGluZSB9IGZyb20gJy4uL3N0eWxlcy9zdHlsZS1oZWxwZXJzJ1xyXG5pbXBvcnQgeyBCYXNlQnV0dG9uLCBCYXNlQnV0dG9uUHJvcHMsIEJ1dHRvblZhcmlhdGlvbiwgQnV0dG9uVmFyaWF0aW9uUHJvcHMgfSBmcm9tICcuL0Jhc2VCdXR0b24nXHJcbmltcG9ydCB7IENlbnRlcmVkU3Bpbm5lciB9IGZyb20gJy4uL3NwaW5uZXIvU3Bpbm5lcidcclxuaW1wb3J0IHsgcmVtIH0gZnJvbSAnLi4vc3R5bGVzL3JlbSdcclxuXHJcbnR5cGUgQnV0dG9uUHJvcHMgPSBCYXNlQnV0dG9uUHJvcHMgJlxyXG4gIEJ1dHRvblZhcmlhdGlvblByb3BzICYge1xyXG4gICAgY2xhc3NOYW1lPzogc3RyaW5nXHJcbiAgICByZXBsYWNlPzogYm9vbGVhblxyXG4gICAgc3VibWl0dGluZz86IGJvb2xlYW5cclxuICAgIGZpbGxXaWR0aD86IGJvb2xlYW5cclxuICAgIGljb24/OiBSZWFjdC5SZWFjdE5vZGVcclxuICAgIGljb25BbGlnbj86ICdsZWZ0JyB8ICdyaWdodCdcclxuICB9XHJcblxyXG5jb25zdCBCYXNlID0gc3R5bGVkKEJhc2VCdXR0b24pPHsgZmlsbFdpZHRoPzogYm9vbGVhbiB9PmBcclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgd2lkdGg6ICR7cCA9PiAocC5maWxsV2lkdGggPyAnMTAwJScgOiB1bmRlZmluZWQpfTtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLW91dCwgY29sb3IgMC4ycyBlYXNlLW91dDtcclxuICAke2ZvY3VzT3V0bGluZShwYWxldHRlLnNlY29uZGFyeUJsYWNrLnByaW1hcnkpfTtcclxuXHJcbiAgJltkaXNhYmxlZF0ge1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgfVxyXG5cclxuICA6bm90KFthcmlhLWJ1c3k9J3RydWUnXSkge1xyXG4gICAgJltkaXNhYmxlZF0ge1xyXG4gICAgICBiYWNrZ3JvdW5kOiAke3BhbGV0dGUuaW5hY3RpdmVHcmV5LnByaW1hcnl9O1xyXG4gICAgICBjb2xvcjogI2ZmZjtcclxuICAgIH1cclxuICB9XHJcbmBcclxuXHJcbmNvbnN0IFRleHRTcGFuID0gc3R5bGVkLnNwYW48eyBzdWJtaXR0aW5nPzogYm9vbGVhbiB9PmBcclxuICBvcGFjaXR5OiAke3AgPT4gcC5zdWJtaXR0aW5nICYmIDB9O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgZmxleC1ncm93OiAxO1xyXG4gIG9yZGVyOiAxO1xyXG5gXHJcblxyXG5jb25zdCBJY29uU3BhbiA9IHN0eWxlZC5zcGFuPHsgc3VibWl0dGluZz86IGJvb2xlYW47IGljb25BbGlnbjogJ2xlZnQnIHwgJ3JpZ2h0JyB9PmBcclxuICBvcGFjaXR5OiAke3AgPT4gcC5zdWJtaXR0aW5nICYmIDB9O1xyXG4gIG1hcmdpbi1sZWZ0OiAke3AgPT4gcC5pY29uQWxpZ24gIT09ICdsZWZ0JyAmJiByZW0oMTApfTtcclxuICBtYXJnaW4tcmlnaHQ6ICR7cCA9PiBwLmljb25BbGlnbiA9PT0gJ2xlZnQnICYmIHJlbSgxMCl9O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvcmRlcjogJHtwID0+IChwLmljb25BbGlnbiA9PT0gJ2xlZnQnID8gMCA6IDEpfTtcclxuICB0b3A6ICR7cmVtKC0xKX07IC8qIG1laCAtIG1ha2VzIHRoZSBpY29uIGxvb2sgbW9yZSBjZW50ZXIgYWxpZ25lZCAqL1xyXG5gXHJcblxyXG5jb25zdCBQcmltYXJ5QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gICR7cHJpbWFyeUJ1dHRvblN0eWxlc31cclxuYFxyXG5cclxuY29uc3QgU2Vjb25kYXJ5QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gICR7c2Vjb25kYXJ5QnV0dG9uU3R5bGVzfVxyXG5gXHJcblxyXG5jb25zdCBPdXRsaW5lZEJ1dHRvbiA9IHN0eWxlZChCYXNlKWBcclxuICAke291dGxpbmVkQnV0dG9uU3R5bGVzfVxyXG5gXHJcblxyXG5jb25zdCBUZXh0QnV0dG9uID0gc3R5bGVkKEJhc2UpYFxyXG4gIGNvbG9yOiAke3BhbGV0dGUuYWN0aW9uQmx1ZS5wcmltYXJ5fTtcclxuICBiYWNrZ3JvdW5kOiAke3BhbGV0dGUuYWN0aW9uQmx1ZS5saWdodH07XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgY29sb3I6ICR7cGFsZXR0ZS5hY3Rpb25CbHVlLmhvdmVyfTtcclxuICB9XHJcbmBcclxuXHJcbmZ1bmN0aW9uIGdldEJ1dHRvbih0eXBlOiBCdXR0b25WYXJpYXRpb24pIHtcclxuICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgIGRlZmF1bHQ6XHJcbiAgICBjYXNlICdwcmltYXJ5JzpcclxuICAgICAgcmV0dXJuIFByaW1hcnlCdXR0b25cclxuICAgIGNhc2UgJ3NlY29uZGFyeSc6XHJcbiAgICAgIHJldHVybiBTZWNvbmRhcnlCdXR0b25cclxuICAgIGNhc2UgJ291dGxpbmVkJzpcclxuICAgICAgcmV0dXJuIE91dGxpbmVkQnV0dG9uXHJcbiAgICBjYXNlICd0ZXh0JzpcclxuICAgICAgcmV0dXJuIFRleHRCdXR0b25cclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IEJ1dHRvbjogUmVhY3QuRkM8QnV0dG9uUHJvcHM+ID0gKHtcclxuICB2YXJpYXRpb24sXHJcbiAgY2hpbGRyZW4sXHJcbiAgc3VibWl0dGluZyxcclxuICBpY29uLFxyXG4gIGljb25BbGlnbiA9ICdyaWdodCcsXHJcbiAgdGl0bGUsXHJcbiAgLi4ucmVzdFxyXG59KSA9PiB7XHJcbiAgY29uc3QgQnV0dG9uVmFyaWF0aW9uID0gZ2V0QnV0dG9uKHZhcmlhdGlvbiA9PT0gdW5kZWZpbmVkID8gJ3ByaW1hcnknIDogdmFyaWF0aW9uKVxyXG4gIGNvbnN0IGRpc3BsYXlUaXRsZSA9IHRpdGxlIHx8ICh0eXBlb2YgY2hpbGRyZW4gPT09ICdzdHJpbmcnICYmIGNoaWxkcmVuKSB8fCAnJ1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPEJ1dHRvblZhcmlhdGlvbiBkaXNhYmxlZD17c3VibWl0dGluZ30gey4uLnJlc3R9IGFyaWEtYnVzeT17c3VibWl0dGluZ30gdGl0bGU9e2Rpc3BsYXlUaXRsZX0+XHJcbiAgICAgIDxUZXh0U3BhbiBzdWJtaXR0aW5nPXtzdWJtaXR0aW5nfT57Y2hpbGRyZW59PC9UZXh0U3Bhbj5cclxuICAgICAge2ljb24gJiYgKFxyXG4gICAgICAgIDxJY29uU3BhbiBzdWJtaXR0aW5nPXtzdWJtaXR0aW5nfSBpY29uQWxpZ249e2ljb25BbGlnbn0+XHJcbiAgICAgICAgICB7aWNvbn1cclxuICAgICAgICA8L0ljb25TcGFuPlxyXG4gICAgICApfVxyXG4gICAgICB7c3VibWl0dGluZyA/IDxDZW50ZXJlZFNwaW5uZXIgc2l6ZT1cIjEuNXJlbVwiIGluc3RhbnQgLz4gOiBudWxsfVxyXG4gICAgPC9CdXR0b25WYXJpYXRpb24+XHJcbiAgKVxyXG59XHJcblxyXG5CdXR0b24uZGVmYXVsdFByb3BzID0ge1xyXG4gIHZhcmlhdGlvbjogJ3ByaW1hcnknLFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBCdXR0b25cclxuIl19 */"));

function getButton(type) {
  switch (type) {
    default:
    case 'primary':
      return PrimaryButton;

    case 'secondary':
      return SecondaryButton;

    case 'outlined':
      return OutlinedButton;

    case 'text':
      return TextButton;
  }
}

var Button = function Button(_ref) {
  var variation = _ref.variation,
      children = _ref.children,
      submitting = _ref.submitting,
      icon = _ref.icon,
      _ref$iconAlign = _ref.iconAlign,
      iconAlign = _ref$iconAlign === void 0 ? 'right' : _ref$iconAlign,
      title = _ref.title,
      rest = _objectWithoutProperties(_ref, ["variation", "children", "submitting", "icon", "iconAlign", "title"]);

  var ButtonVariation = getButton(variation === undefined ? 'primary' : variation);
  var displayTitle = title || typeof children === 'string' && children || '';
  return ___EmotionJSX(ButtonVariation, _extends({
    disabled: submitting
  }, rest, {
    "aria-busy": submitting,
    title: displayTitle
  }), ___EmotionJSX(TextSpan, {
    submitting: submitting
  }, children), icon && ___EmotionJSX(IconSpan, {
    submitting: submitting,
    iconAlign: iconAlign
  }, icon), submitting ? ___EmotionJSX(CenteredSpinner, {
    size: "1.5rem",
    instant: true
  }) : null);
};

Button.defaultProps = {
  variation: 'primary'
};
export default Button;