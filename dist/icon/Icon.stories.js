import _styled from "@emotion/styled-base";
import { jsx as ___EmotionJSX } from "@emotion/core";
import React from 'react';
import { storiesOf } from '@storybook/react';
import { select, withKnobs } from '@storybook/addon-knobs';
import { palette } from '@dfds-shared/colors';
import allCoreIcons from '@dfds-shared/icons/dist/core/all-icons';
import allLinksIcons from '@dfds-shared/icons/dist/links/all-icons';
import allPaxIcons from '@dfds-shared/icons/dist/pax/all-icons';
import allFlagIcons from '@dfds-shared/icons/dist/flags/all-icons'; // import * as SvgIcon from '@dfds-shared/icons'

var stories = storiesOf('Icons|Icons', module);
stories.addDecorator(withKnobs);
var flagStories = storiesOf('Icons|Flags', module);
flagStories.addDecorator(withKnobs);

var Wrapper = _styled("div", {
  target: "e17w5j8z0"
})(process.env.NODE_ENV === "production" ? {
  name: "2imjyh",
  styles: "display:flex;flex-wrap:wrap;"
} : {
  name: "2imjyh",
  styles: "display:flex;flex-wrap:wrap;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pY29uL0ljb24uc3Rvcmllcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0IwQiIsImZpbGUiOiIuLi8uLi9zcmMvaWNvbi9JY29uLnN0b3JpZXMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCdcclxuaW1wb3J0IHsgc3Rvcmllc09mIH0gZnJvbSAnQHN0b3J5Ym9vay9yZWFjdCdcclxuaW1wb3J0IHsgc2VsZWN0LCB3aXRoS25vYnMgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWtub2JzJ1xyXG5cclxuaW1wb3J0IHsgcGFsZXR0ZSB9IGZyb20gJ0BkZmRzLXNoYXJlZC9jb2xvcnMnXHJcbmltcG9ydCBhbGxDb3JlSWNvbnMgZnJvbSAnQGRmZHMtc2hhcmVkL2ljb25zL2Rpc3QvY29yZS9hbGwtaWNvbnMnXHJcbmltcG9ydCBhbGxMaW5rc0ljb25zIGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucy9kaXN0L2xpbmtzL2FsbC1pY29ucydcclxuaW1wb3J0IGFsbFBheEljb25zIGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucy9kaXN0L3BheC9hbGwtaWNvbnMnXHJcbmltcG9ydCBhbGxGbGFnSWNvbnMgZnJvbSAnQGRmZHMtc2hhcmVkL2ljb25zL2Rpc3QvZmxhZ3MvYWxsLWljb25zJ1xyXG4vLyBpbXBvcnQgKiBhcyBTdmdJY29uIGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucydcclxuXHJcbmNvbnN0IHN0b3JpZXMgPSBzdG9yaWVzT2YoJ0ljb25zfEljb25zJywgbW9kdWxlKVxyXG5zdG9yaWVzLmFkZERlY29yYXRvcih3aXRoS25vYnMpXHJcblxyXG5jb25zdCBmbGFnU3RvcmllcyA9IHN0b3JpZXNPZignSWNvbnN8RmxhZ3MnLCBtb2R1bGUpXHJcbmZsYWdTdG9yaWVzLmFkZERlY29yYXRvcih3aXRoS25vYnMpXHJcblxyXG5jb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdmBcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxuYFxyXG5cclxuY29uc3QgSWNvbkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgbWluLXdpZHRoOiAxMjBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogOHB4O1xyXG4gIG1hcmdpbjogOHB4O1xyXG4gICY6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtwYWxldHRlLmJhY2tncm91bmRHcmV5LmhvdmVyfTtcclxuICB9XHJcbmBcclxuXHJcbmNvbnN0IEljb24gPSBzdHlsZWQuZGl2PHsgc2l6ZTogc3RyaW5nOyBjb2xvcjogc3RyaW5nOyBzZWNvbmRhcnlDb2xvcjogc3RyaW5nIH0+YFxyXG4gIGZvbnQtc2l6ZTogJHtwID0+IChwLnNpemUgPyBwLnNpemUgOiB1bmRlZmluZWQpfTtcclxuICBjb2xvcjogJHtwID0+IChwLmNvbG9yID8gcC5jb2xvciA6IHVuZGVmaW5lZCl9O1xyXG4gIG1hcmdpbjogOHB4O1xyXG4gIG1hcmdpbi10b3A6IDA7XHJcbiAgPiBzdmcge1xyXG4gICAgZmlsbDogJHtwID0+IChwLnNlY29uZGFyeUNvbG9yID8gcC5zZWNvbmRhcnlDb2xvciA6IHVuZGVmaW5lZCl9O1xyXG4gIH1cclxuYFxyXG5cclxuY29uc3QgSWNvbk5hbWUgPSBzdHlsZWQuZGl2YFxyXG4gIGZvbnQtc2l6ZTogMC43cmVtO1xyXG5gXHJcblxyXG5jb25zdCBzaXplcyA9IHsgJzFyZW0nOiAnMXJlbScsICcycmVtJzogJzJyZW0nLCAnM3JlbSc6ICczcmVtJywgJzRyZW0nOiAnNHJlbScsICc1cmVtJzogJzVyZW0nLCAnNnJlbSc6ICc2cmVtJyB9XHJcblxyXG5jb25zdCBjb2xvclZhcmlhdGlvbnMgPSB7XHJcbiAgdGV4dEdyZXk6IHBhbGV0dGUudGV4dEdyZXkucHJpbWFyeSxcclxuICBsaW5rQmx1ZTogcGFsZXR0ZS5saW5rQmx1ZS5wcmltYXJ5LFxyXG4gIG5vUmVkOiBwYWxldHRlLm5vUmVkLnByaW1hcnksXHJcbiAgeWVzR3JlZW46IHBhbGV0dGUueWVzR3JlZW4ucHJpbWFyeSxcclxufVxyXG5cclxudHlwZSBJY29uQ29sbGVjdGlvbiA9IHR5cGVvZiBhbGxDb3JlSWNvbnNcclxudHlwZSBJY29uQ29sbGVjdGlvbkRpc3BsYXkgPSB7XHJcbiAgY29sbGVjdGlvbjogSWNvbkNvbGxlY3Rpb25cclxuICBhZGp1c3RDb2xvcnNLbm9iPzogYm9vbGVhblxyXG59XHJcblxyXG5jb25zdCBJY29uQ29sbGVjdGlvbiA9ICh7IGNvbGxlY3Rpb24sIGFkanVzdENvbG9yc0tub2IgPSB0cnVlIH06IEljb25Db2xsZWN0aW9uRGlzcGxheSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8V3JhcHBlcj5cclxuICAgICAge2NvbGxlY3Rpb24ubWFwKCh7IG5hbWUsIGNvbXBvbmVudCB9KSA9PiB7XHJcbiAgICAgICAgY29uc3QgU3ZnQ29tcG9uZW50ID0gY29tcG9uZW50XHJcblxyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICA8SWNvbkNvbnRhaW5lciBrZXk9e25hbWV9PlxyXG4gICAgICAgICAgICA8SWNvblxyXG4gICAgICAgICAgICAgIGNvbG9yPXtcclxuICAgICAgICAgICAgICAgIGFkanVzdENvbG9yc0tub2IgPyBzZWxlY3QoJ0NvbG9yJywgY29sb3JWYXJpYXRpb25zLCBjb2xvclZhcmlhdGlvbnMudGV4dEdyZXkpIDogY29sb3JWYXJpYXRpb25zLnRleHRHcmV5XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIHNlY29uZGFyeUNvbG9yPXtcclxuICAgICAgICAgICAgICAgIGFkanVzdENvbG9yc0tub2JcclxuICAgICAgICAgICAgICAgICAgPyBzZWxlY3QoJ1NlY29uZGFyeScsIGNvbG9yVmFyaWF0aW9ucywgY29sb3JWYXJpYXRpb25zLnllc0dyZWVuKVxyXG4gICAgICAgICAgICAgICAgICA6IGNvbG9yVmFyaWF0aW9ucy55ZXNHcmVlblxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBzaXplPXtzZWxlY3QoJ1NpemUnLCBzaXplcywgc2l6ZXNbJzJyZW0nXSl9XHJcbiAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICA8U3ZnQ29tcG9uZW50IC8+XHJcbiAgICAgICAgICAgIDwvSWNvbj5cclxuICAgICAgICAgICAgPEljb25OYW1lPntuYW1lfTwvSWNvbk5hbWU+XHJcbiAgICAgICAgICA8L0ljb25Db250YWluZXI+XHJcbiAgICAgICAgKVxyXG4gICAgICB9KX1cclxuICAgIDwvV3JhcHBlcj5cclxuICApXHJcbn1cclxuXHJcbnN0b3JpZXMuYWRkKCdDb3JlJywgKCkgPT4gKFxyXG4gIDw+XHJcbiAgICA8SWNvbkNvbGxlY3Rpb24gY29sbGVjdGlvbj17YWxsQ29yZUljb25zfSAvPlxyXG4gIDwvPlxyXG4pKVxyXG5cclxuc3Rvcmllcy5hZGQoJ0xpbmtzJywgKCkgPT4gKFxyXG4gIDw+XHJcbiAgICA8SWNvbkNvbGxlY3Rpb24gY29sbGVjdGlvbj17YWxsTGlua3NJY29uc30gLz5cclxuICA8Lz5cclxuKSlcclxuXHJcbnN0b3JpZXMuYWRkKCdQYXgnLCAoKSA9PiAoXHJcbiAgPD5cclxuICAgIDxJY29uQ29sbGVjdGlvbiBjb2xsZWN0aW9uPXthbGxQYXhJY29uc30gLz5cclxuICA8Lz5cclxuKSlcclxuXHJcbmZsYWdTdG9yaWVzLmFkZCgnRmxhZ3MnLCAoKSA9PiAoXHJcbiAgPD5cclxuICAgIDxJY29uQ29sbGVjdGlvbiBhZGp1c3RDb2xvcnNLbm9iPXtmYWxzZX0gY29sbGVjdGlvbj17YWxsRmxhZ0ljb25zfSAvPlxyXG4gIDwvPlxyXG4pKVxyXG4iXX0= */"
});

var IconContainer = _styled("div", {
  target: "e17w5j8z1"
})("min-width:120px;text-align:center;padding:8px;margin:8px;&:hover{background-color:", palette.backgroundGrey.hover, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pY29uL0ljb24uc3Rvcmllcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUJnQyIsImZpbGUiOiIuLi8uLi9zcmMvaWNvbi9JY29uLnN0b3JpZXMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCdcclxuaW1wb3J0IHsgc3Rvcmllc09mIH0gZnJvbSAnQHN0b3J5Ym9vay9yZWFjdCdcclxuaW1wb3J0IHsgc2VsZWN0LCB3aXRoS25vYnMgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWtub2JzJ1xyXG5cclxuaW1wb3J0IHsgcGFsZXR0ZSB9IGZyb20gJ0BkZmRzLXNoYXJlZC9jb2xvcnMnXHJcbmltcG9ydCBhbGxDb3JlSWNvbnMgZnJvbSAnQGRmZHMtc2hhcmVkL2ljb25zL2Rpc3QvY29yZS9hbGwtaWNvbnMnXHJcbmltcG9ydCBhbGxMaW5rc0ljb25zIGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucy9kaXN0L2xpbmtzL2FsbC1pY29ucydcclxuaW1wb3J0IGFsbFBheEljb25zIGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucy9kaXN0L3BheC9hbGwtaWNvbnMnXHJcbmltcG9ydCBhbGxGbGFnSWNvbnMgZnJvbSAnQGRmZHMtc2hhcmVkL2ljb25zL2Rpc3QvZmxhZ3MvYWxsLWljb25zJ1xyXG4vLyBpbXBvcnQgKiBhcyBTdmdJY29uIGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucydcclxuXHJcbmNvbnN0IHN0b3JpZXMgPSBzdG9yaWVzT2YoJ0ljb25zfEljb25zJywgbW9kdWxlKVxyXG5zdG9yaWVzLmFkZERlY29yYXRvcih3aXRoS25vYnMpXHJcblxyXG5jb25zdCBmbGFnU3RvcmllcyA9IHN0b3JpZXNPZignSWNvbnN8RmxhZ3MnLCBtb2R1bGUpXHJcbmZsYWdTdG9yaWVzLmFkZERlY29yYXRvcih3aXRoS25vYnMpXHJcblxyXG5jb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdmBcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxuYFxyXG5cclxuY29uc3QgSWNvbkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgbWluLXdpZHRoOiAxMjBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogOHB4O1xyXG4gIG1hcmdpbjogOHB4O1xyXG4gICY6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtwYWxldHRlLmJhY2tncm91bmRHcmV5LmhvdmVyfTtcclxuICB9XHJcbmBcclxuXHJcbmNvbnN0IEljb24gPSBzdHlsZWQuZGl2PHsgc2l6ZTogc3RyaW5nOyBjb2xvcjogc3RyaW5nOyBzZWNvbmRhcnlDb2xvcjogc3RyaW5nIH0+YFxyXG4gIGZvbnQtc2l6ZTogJHtwID0+IChwLnNpemUgPyBwLnNpemUgOiB1bmRlZmluZWQpfTtcclxuICBjb2xvcjogJHtwID0+IChwLmNvbG9yID8gcC5jb2xvciA6IHVuZGVmaW5lZCl9O1xyXG4gIG1hcmdpbjogOHB4O1xyXG4gIG1hcmdpbi10b3A6IDA7XHJcbiAgPiBzdmcge1xyXG4gICAgZmlsbDogJHtwID0+IChwLnNlY29uZGFyeUNvbG9yID8gcC5zZWNvbmRhcnlDb2xvciA6IHVuZGVmaW5lZCl9O1xyXG4gIH1cclxuYFxyXG5cclxuY29uc3QgSWNvbk5hbWUgPSBzdHlsZWQuZGl2YFxyXG4gIGZvbnQtc2l6ZTogMC43cmVtO1xyXG5gXHJcblxyXG5jb25zdCBzaXplcyA9IHsgJzFyZW0nOiAnMXJlbScsICcycmVtJzogJzJyZW0nLCAnM3JlbSc6ICczcmVtJywgJzRyZW0nOiAnNHJlbScsICc1cmVtJzogJzVyZW0nLCAnNnJlbSc6ICc2cmVtJyB9XHJcblxyXG5jb25zdCBjb2xvclZhcmlhdGlvbnMgPSB7XHJcbiAgdGV4dEdyZXk6IHBhbGV0dGUudGV4dEdyZXkucHJpbWFyeSxcclxuICBsaW5rQmx1ZTogcGFsZXR0ZS5saW5rQmx1ZS5wcmltYXJ5LFxyXG4gIG5vUmVkOiBwYWxldHRlLm5vUmVkLnByaW1hcnksXHJcbiAgeWVzR3JlZW46IHBhbGV0dGUueWVzR3JlZW4ucHJpbWFyeSxcclxufVxyXG5cclxudHlwZSBJY29uQ29sbGVjdGlvbiA9IHR5cGVvZiBhbGxDb3JlSWNvbnNcclxudHlwZSBJY29uQ29sbGVjdGlvbkRpc3BsYXkgPSB7XHJcbiAgY29sbGVjdGlvbjogSWNvbkNvbGxlY3Rpb25cclxuICBhZGp1c3RDb2xvcnNLbm9iPzogYm9vbGVhblxyXG59XHJcblxyXG5jb25zdCBJY29uQ29sbGVjdGlvbiA9ICh7IGNvbGxlY3Rpb24sIGFkanVzdENvbG9yc0tub2IgPSB0cnVlIH06IEljb25Db2xsZWN0aW9uRGlzcGxheSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8V3JhcHBlcj5cclxuICAgICAge2NvbGxlY3Rpb24ubWFwKCh7IG5hbWUsIGNvbXBvbmVudCB9KSA9PiB7XHJcbiAgICAgICAgY29uc3QgU3ZnQ29tcG9uZW50ID0gY29tcG9uZW50XHJcblxyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICA8SWNvbkNvbnRhaW5lciBrZXk9e25hbWV9PlxyXG4gICAgICAgICAgICA8SWNvblxyXG4gICAgICAgICAgICAgIGNvbG9yPXtcclxuICAgICAgICAgICAgICAgIGFkanVzdENvbG9yc0tub2IgPyBzZWxlY3QoJ0NvbG9yJywgY29sb3JWYXJpYXRpb25zLCBjb2xvclZhcmlhdGlvbnMudGV4dEdyZXkpIDogY29sb3JWYXJpYXRpb25zLnRleHRHcmV5XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIHNlY29uZGFyeUNvbG9yPXtcclxuICAgICAgICAgICAgICAgIGFkanVzdENvbG9yc0tub2JcclxuICAgICAgICAgICAgICAgICAgPyBzZWxlY3QoJ1NlY29uZGFyeScsIGNvbG9yVmFyaWF0aW9ucywgY29sb3JWYXJpYXRpb25zLnllc0dyZWVuKVxyXG4gICAgICAgICAgICAgICAgICA6IGNvbG9yVmFyaWF0aW9ucy55ZXNHcmVlblxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBzaXplPXtzZWxlY3QoJ1NpemUnLCBzaXplcywgc2l6ZXNbJzJyZW0nXSl9XHJcbiAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICA8U3ZnQ29tcG9uZW50IC8+XHJcbiAgICAgICAgICAgIDwvSWNvbj5cclxuICAgICAgICAgICAgPEljb25OYW1lPntuYW1lfTwvSWNvbk5hbWU+XHJcbiAgICAgICAgICA8L0ljb25Db250YWluZXI+XHJcbiAgICAgICAgKVxyXG4gICAgICB9KX1cclxuICAgIDwvV3JhcHBlcj5cclxuICApXHJcbn1cclxuXHJcbnN0b3JpZXMuYWRkKCdDb3JlJywgKCkgPT4gKFxyXG4gIDw+XHJcbiAgICA8SWNvbkNvbGxlY3Rpb24gY29sbGVjdGlvbj17YWxsQ29yZUljb25zfSAvPlxyXG4gIDwvPlxyXG4pKVxyXG5cclxuc3Rvcmllcy5hZGQoJ0xpbmtzJywgKCkgPT4gKFxyXG4gIDw+XHJcbiAgICA8SWNvbkNvbGxlY3Rpb24gY29sbGVjdGlvbj17YWxsTGlua3NJY29uc30gLz5cclxuICA8Lz5cclxuKSlcclxuXHJcbnN0b3JpZXMuYWRkKCdQYXgnLCAoKSA9PiAoXHJcbiAgPD5cclxuICAgIDxJY29uQ29sbGVjdGlvbiBjb2xsZWN0aW9uPXthbGxQYXhJY29uc30gLz5cclxuICA8Lz5cclxuKSlcclxuXHJcbmZsYWdTdG9yaWVzLmFkZCgnRmxhZ3MnLCAoKSA9PiAoXHJcbiAgPD5cclxuICAgIDxJY29uQ29sbGVjdGlvbiBhZGp1c3RDb2xvcnNLbm9iPXtmYWxzZX0gY29sbGVjdGlvbj17YWxsRmxhZ0ljb25zfSAvPlxyXG4gIDwvPlxyXG4pKVxyXG4iXX0= */"));

var Icon = _styled("div", {
  target: "e17w5j8z2"
})("font-size:", function (p) {
  return p.size ? p.size : undefined;
}, ";color:", function (p) {
  return p.color ? p.color : undefined;
}, ";margin:8px;margin-top:0;> svg{fill:", function (p) {
  return p.secondaryColor ? p.secondaryColor : undefined;
}, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pY29uL0ljb24uc3Rvcmllcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUNnRiIsImZpbGUiOiIuLi8uLi9zcmMvaWNvbi9JY29uLnN0b3JpZXMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCdcclxuaW1wb3J0IHsgc3Rvcmllc09mIH0gZnJvbSAnQHN0b3J5Ym9vay9yZWFjdCdcclxuaW1wb3J0IHsgc2VsZWN0LCB3aXRoS25vYnMgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWtub2JzJ1xyXG5cclxuaW1wb3J0IHsgcGFsZXR0ZSB9IGZyb20gJ0BkZmRzLXNoYXJlZC9jb2xvcnMnXHJcbmltcG9ydCBhbGxDb3JlSWNvbnMgZnJvbSAnQGRmZHMtc2hhcmVkL2ljb25zL2Rpc3QvY29yZS9hbGwtaWNvbnMnXHJcbmltcG9ydCBhbGxMaW5rc0ljb25zIGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucy9kaXN0L2xpbmtzL2FsbC1pY29ucydcclxuaW1wb3J0IGFsbFBheEljb25zIGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucy9kaXN0L3BheC9hbGwtaWNvbnMnXHJcbmltcG9ydCBhbGxGbGFnSWNvbnMgZnJvbSAnQGRmZHMtc2hhcmVkL2ljb25zL2Rpc3QvZmxhZ3MvYWxsLWljb25zJ1xyXG4vLyBpbXBvcnQgKiBhcyBTdmdJY29uIGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucydcclxuXHJcbmNvbnN0IHN0b3JpZXMgPSBzdG9yaWVzT2YoJ0ljb25zfEljb25zJywgbW9kdWxlKVxyXG5zdG9yaWVzLmFkZERlY29yYXRvcih3aXRoS25vYnMpXHJcblxyXG5jb25zdCBmbGFnU3RvcmllcyA9IHN0b3JpZXNPZignSWNvbnN8RmxhZ3MnLCBtb2R1bGUpXHJcbmZsYWdTdG9yaWVzLmFkZERlY29yYXRvcih3aXRoS25vYnMpXHJcblxyXG5jb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdmBcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxuYFxyXG5cclxuY29uc3QgSWNvbkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgbWluLXdpZHRoOiAxMjBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogOHB4O1xyXG4gIG1hcmdpbjogOHB4O1xyXG4gICY6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtwYWxldHRlLmJhY2tncm91bmRHcmV5LmhvdmVyfTtcclxuICB9XHJcbmBcclxuXHJcbmNvbnN0IEljb24gPSBzdHlsZWQuZGl2PHsgc2l6ZTogc3RyaW5nOyBjb2xvcjogc3RyaW5nOyBzZWNvbmRhcnlDb2xvcjogc3RyaW5nIH0+YFxyXG4gIGZvbnQtc2l6ZTogJHtwID0+IChwLnNpemUgPyBwLnNpemUgOiB1bmRlZmluZWQpfTtcclxuICBjb2xvcjogJHtwID0+IChwLmNvbG9yID8gcC5jb2xvciA6IHVuZGVmaW5lZCl9O1xyXG4gIG1hcmdpbjogOHB4O1xyXG4gIG1hcmdpbi10b3A6IDA7XHJcbiAgPiBzdmcge1xyXG4gICAgZmlsbDogJHtwID0+IChwLnNlY29uZGFyeUNvbG9yID8gcC5zZWNvbmRhcnlDb2xvciA6IHVuZGVmaW5lZCl9O1xyXG4gIH1cclxuYFxyXG5cclxuY29uc3QgSWNvbk5hbWUgPSBzdHlsZWQuZGl2YFxyXG4gIGZvbnQtc2l6ZTogMC43cmVtO1xyXG5gXHJcblxyXG5jb25zdCBzaXplcyA9IHsgJzFyZW0nOiAnMXJlbScsICcycmVtJzogJzJyZW0nLCAnM3JlbSc6ICczcmVtJywgJzRyZW0nOiAnNHJlbScsICc1cmVtJzogJzVyZW0nLCAnNnJlbSc6ICc2cmVtJyB9XHJcblxyXG5jb25zdCBjb2xvclZhcmlhdGlvbnMgPSB7XHJcbiAgdGV4dEdyZXk6IHBhbGV0dGUudGV4dEdyZXkucHJpbWFyeSxcclxuICBsaW5rQmx1ZTogcGFsZXR0ZS5saW5rQmx1ZS5wcmltYXJ5LFxyXG4gIG5vUmVkOiBwYWxldHRlLm5vUmVkLnByaW1hcnksXHJcbiAgeWVzR3JlZW46IHBhbGV0dGUueWVzR3JlZW4ucHJpbWFyeSxcclxufVxyXG5cclxudHlwZSBJY29uQ29sbGVjdGlvbiA9IHR5cGVvZiBhbGxDb3JlSWNvbnNcclxudHlwZSBJY29uQ29sbGVjdGlvbkRpc3BsYXkgPSB7XHJcbiAgY29sbGVjdGlvbjogSWNvbkNvbGxlY3Rpb25cclxuICBhZGp1c3RDb2xvcnNLbm9iPzogYm9vbGVhblxyXG59XHJcblxyXG5jb25zdCBJY29uQ29sbGVjdGlvbiA9ICh7IGNvbGxlY3Rpb24sIGFkanVzdENvbG9yc0tub2IgPSB0cnVlIH06IEljb25Db2xsZWN0aW9uRGlzcGxheSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8V3JhcHBlcj5cclxuICAgICAge2NvbGxlY3Rpb24ubWFwKCh7IG5hbWUsIGNvbXBvbmVudCB9KSA9PiB7XHJcbiAgICAgICAgY29uc3QgU3ZnQ29tcG9uZW50ID0gY29tcG9uZW50XHJcblxyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICA8SWNvbkNvbnRhaW5lciBrZXk9e25hbWV9PlxyXG4gICAgICAgICAgICA8SWNvblxyXG4gICAgICAgICAgICAgIGNvbG9yPXtcclxuICAgICAgICAgICAgICAgIGFkanVzdENvbG9yc0tub2IgPyBzZWxlY3QoJ0NvbG9yJywgY29sb3JWYXJpYXRpb25zLCBjb2xvclZhcmlhdGlvbnMudGV4dEdyZXkpIDogY29sb3JWYXJpYXRpb25zLnRleHRHcmV5XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIHNlY29uZGFyeUNvbG9yPXtcclxuICAgICAgICAgICAgICAgIGFkanVzdENvbG9yc0tub2JcclxuICAgICAgICAgICAgICAgICAgPyBzZWxlY3QoJ1NlY29uZGFyeScsIGNvbG9yVmFyaWF0aW9ucywgY29sb3JWYXJpYXRpb25zLnllc0dyZWVuKVxyXG4gICAgICAgICAgICAgICAgICA6IGNvbG9yVmFyaWF0aW9ucy55ZXNHcmVlblxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBzaXplPXtzZWxlY3QoJ1NpemUnLCBzaXplcywgc2l6ZXNbJzJyZW0nXSl9XHJcbiAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICA8U3ZnQ29tcG9uZW50IC8+XHJcbiAgICAgICAgICAgIDwvSWNvbj5cclxuICAgICAgICAgICAgPEljb25OYW1lPntuYW1lfTwvSWNvbk5hbWU+XHJcbiAgICAgICAgICA8L0ljb25Db250YWluZXI+XHJcbiAgICAgICAgKVxyXG4gICAgICB9KX1cclxuICAgIDwvV3JhcHBlcj5cclxuICApXHJcbn1cclxuXHJcbnN0b3JpZXMuYWRkKCdDb3JlJywgKCkgPT4gKFxyXG4gIDw+XHJcbiAgICA8SWNvbkNvbGxlY3Rpb24gY29sbGVjdGlvbj17YWxsQ29yZUljb25zfSAvPlxyXG4gIDwvPlxyXG4pKVxyXG5cclxuc3Rvcmllcy5hZGQoJ0xpbmtzJywgKCkgPT4gKFxyXG4gIDw+XHJcbiAgICA8SWNvbkNvbGxlY3Rpb24gY29sbGVjdGlvbj17YWxsTGlua3NJY29uc30gLz5cclxuICA8Lz5cclxuKSlcclxuXHJcbnN0b3JpZXMuYWRkKCdQYXgnLCAoKSA9PiAoXHJcbiAgPD5cclxuICAgIDxJY29uQ29sbGVjdGlvbiBjb2xsZWN0aW9uPXthbGxQYXhJY29uc30gLz5cclxuICA8Lz5cclxuKSlcclxuXHJcbmZsYWdTdG9yaWVzLmFkZCgnRmxhZ3MnLCAoKSA9PiAoXHJcbiAgPD5cclxuICAgIDxJY29uQ29sbGVjdGlvbiBhZGp1c3RDb2xvcnNLbm9iPXtmYWxzZX0gY29sbGVjdGlvbj17YWxsRmxhZ0ljb25zfSAvPlxyXG4gIDwvPlxyXG4pKVxyXG4iXX0= */"));

var IconName = _styled("div", {
  target: "e17w5j8z3"
})(process.env.NODE_ENV === "production" ? {
  name: "1surlz0",
  styles: "font-size:0.7rem;"
} : {
  name: "1surlz0",
  styles: "font-size:0.7rem;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pY29uL0ljb24uc3Rvcmllcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMkMyQiIsImZpbGUiOiIuLi8uLi9zcmMvaWNvbi9JY29uLnN0b3JpZXMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCdcclxuaW1wb3J0IHsgc3Rvcmllc09mIH0gZnJvbSAnQHN0b3J5Ym9vay9yZWFjdCdcclxuaW1wb3J0IHsgc2VsZWN0LCB3aXRoS25vYnMgfSBmcm9tICdAc3Rvcnlib29rL2FkZG9uLWtub2JzJ1xyXG5cclxuaW1wb3J0IHsgcGFsZXR0ZSB9IGZyb20gJ0BkZmRzLXNoYXJlZC9jb2xvcnMnXHJcbmltcG9ydCBhbGxDb3JlSWNvbnMgZnJvbSAnQGRmZHMtc2hhcmVkL2ljb25zL2Rpc3QvY29yZS9hbGwtaWNvbnMnXHJcbmltcG9ydCBhbGxMaW5rc0ljb25zIGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucy9kaXN0L2xpbmtzL2FsbC1pY29ucydcclxuaW1wb3J0IGFsbFBheEljb25zIGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucy9kaXN0L3BheC9hbGwtaWNvbnMnXHJcbmltcG9ydCBhbGxGbGFnSWNvbnMgZnJvbSAnQGRmZHMtc2hhcmVkL2ljb25zL2Rpc3QvZmxhZ3MvYWxsLWljb25zJ1xyXG4vLyBpbXBvcnQgKiBhcyBTdmdJY29uIGZyb20gJ0BkZmRzLXNoYXJlZC9pY29ucydcclxuXHJcbmNvbnN0IHN0b3JpZXMgPSBzdG9yaWVzT2YoJ0ljb25zfEljb25zJywgbW9kdWxlKVxyXG5zdG9yaWVzLmFkZERlY29yYXRvcih3aXRoS25vYnMpXHJcblxyXG5jb25zdCBmbGFnU3RvcmllcyA9IHN0b3JpZXNPZignSWNvbnN8RmxhZ3MnLCBtb2R1bGUpXHJcbmZsYWdTdG9yaWVzLmFkZERlY29yYXRvcih3aXRoS25vYnMpXHJcblxyXG5jb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdmBcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxuYFxyXG5cclxuY29uc3QgSWNvbkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgbWluLXdpZHRoOiAxMjBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogOHB4O1xyXG4gIG1hcmdpbjogOHB4O1xyXG4gICY6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtwYWxldHRlLmJhY2tncm91bmRHcmV5LmhvdmVyfTtcclxuICB9XHJcbmBcclxuXHJcbmNvbnN0IEljb24gPSBzdHlsZWQuZGl2PHsgc2l6ZTogc3RyaW5nOyBjb2xvcjogc3RyaW5nOyBzZWNvbmRhcnlDb2xvcjogc3RyaW5nIH0+YFxyXG4gIGZvbnQtc2l6ZTogJHtwID0+IChwLnNpemUgPyBwLnNpemUgOiB1bmRlZmluZWQpfTtcclxuICBjb2xvcjogJHtwID0+IChwLmNvbG9yID8gcC5jb2xvciA6IHVuZGVmaW5lZCl9O1xyXG4gIG1hcmdpbjogOHB4O1xyXG4gIG1hcmdpbi10b3A6IDA7XHJcbiAgPiBzdmcge1xyXG4gICAgZmlsbDogJHtwID0+IChwLnNlY29uZGFyeUNvbG9yID8gcC5zZWNvbmRhcnlDb2xvciA6IHVuZGVmaW5lZCl9O1xyXG4gIH1cclxuYFxyXG5cclxuY29uc3QgSWNvbk5hbWUgPSBzdHlsZWQuZGl2YFxyXG4gIGZvbnQtc2l6ZTogMC43cmVtO1xyXG5gXHJcblxyXG5jb25zdCBzaXplcyA9IHsgJzFyZW0nOiAnMXJlbScsICcycmVtJzogJzJyZW0nLCAnM3JlbSc6ICczcmVtJywgJzRyZW0nOiAnNHJlbScsICc1cmVtJzogJzVyZW0nLCAnNnJlbSc6ICc2cmVtJyB9XHJcblxyXG5jb25zdCBjb2xvclZhcmlhdGlvbnMgPSB7XHJcbiAgdGV4dEdyZXk6IHBhbGV0dGUudGV4dEdyZXkucHJpbWFyeSxcclxuICBsaW5rQmx1ZTogcGFsZXR0ZS5saW5rQmx1ZS5wcmltYXJ5LFxyXG4gIG5vUmVkOiBwYWxldHRlLm5vUmVkLnByaW1hcnksXHJcbiAgeWVzR3JlZW46IHBhbGV0dGUueWVzR3JlZW4ucHJpbWFyeSxcclxufVxyXG5cclxudHlwZSBJY29uQ29sbGVjdGlvbiA9IHR5cGVvZiBhbGxDb3JlSWNvbnNcclxudHlwZSBJY29uQ29sbGVjdGlvbkRpc3BsYXkgPSB7XHJcbiAgY29sbGVjdGlvbjogSWNvbkNvbGxlY3Rpb25cclxuICBhZGp1c3RDb2xvcnNLbm9iPzogYm9vbGVhblxyXG59XHJcblxyXG5jb25zdCBJY29uQ29sbGVjdGlvbiA9ICh7IGNvbGxlY3Rpb24sIGFkanVzdENvbG9yc0tub2IgPSB0cnVlIH06IEljb25Db2xsZWN0aW9uRGlzcGxheSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8V3JhcHBlcj5cclxuICAgICAge2NvbGxlY3Rpb24ubWFwKCh7IG5hbWUsIGNvbXBvbmVudCB9KSA9PiB7XHJcbiAgICAgICAgY29uc3QgU3ZnQ29tcG9uZW50ID0gY29tcG9uZW50XHJcblxyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICA8SWNvbkNvbnRhaW5lciBrZXk9e25hbWV9PlxyXG4gICAgICAgICAgICA8SWNvblxyXG4gICAgICAgICAgICAgIGNvbG9yPXtcclxuICAgICAgICAgICAgICAgIGFkanVzdENvbG9yc0tub2IgPyBzZWxlY3QoJ0NvbG9yJywgY29sb3JWYXJpYXRpb25zLCBjb2xvclZhcmlhdGlvbnMudGV4dEdyZXkpIDogY29sb3JWYXJpYXRpb25zLnRleHRHcmV5XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIHNlY29uZGFyeUNvbG9yPXtcclxuICAgICAgICAgICAgICAgIGFkanVzdENvbG9yc0tub2JcclxuICAgICAgICAgICAgICAgICAgPyBzZWxlY3QoJ1NlY29uZGFyeScsIGNvbG9yVmFyaWF0aW9ucywgY29sb3JWYXJpYXRpb25zLnllc0dyZWVuKVxyXG4gICAgICAgICAgICAgICAgICA6IGNvbG9yVmFyaWF0aW9ucy55ZXNHcmVlblxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBzaXplPXtzZWxlY3QoJ1NpemUnLCBzaXplcywgc2l6ZXNbJzJyZW0nXSl9XHJcbiAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICA8U3ZnQ29tcG9uZW50IC8+XHJcbiAgICAgICAgICAgIDwvSWNvbj5cclxuICAgICAgICAgICAgPEljb25OYW1lPntuYW1lfTwvSWNvbk5hbWU+XHJcbiAgICAgICAgICA8L0ljb25Db250YWluZXI+XHJcbiAgICAgICAgKVxyXG4gICAgICB9KX1cclxuICAgIDwvV3JhcHBlcj5cclxuICApXHJcbn1cclxuXHJcbnN0b3JpZXMuYWRkKCdDb3JlJywgKCkgPT4gKFxyXG4gIDw+XHJcbiAgICA8SWNvbkNvbGxlY3Rpb24gY29sbGVjdGlvbj17YWxsQ29yZUljb25zfSAvPlxyXG4gIDwvPlxyXG4pKVxyXG5cclxuc3Rvcmllcy5hZGQoJ0xpbmtzJywgKCkgPT4gKFxyXG4gIDw+XHJcbiAgICA8SWNvbkNvbGxlY3Rpb24gY29sbGVjdGlvbj17YWxsTGlua3NJY29uc30gLz5cclxuICA8Lz5cclxuKSlcclxuXHJcbnN0b3JpZXMuYWRkKCdQYXgnLCAoKSA9PiAoXHJcbiAgPD5cclxuICAgIDxJY29uQ29sbGVjdGlvbiBjb2xsZWN0aW9uPXthbGxQYXhJY29uc30gLz5cclxuICA8Lz5cclxuKSlcclxuXHJcbmZsYWdTdG9yaWVzLmFkZCgnRmxhZ3MnLCAoKSA9PiAoXHJcbiAgPD5cclxuICAgIDxJY29uQ29sbGVjdGlvbiBhZGp1c3RDb2xvcnNLbm9iPXtmYWxzZX0gY29sbGVjdGlvbj17YWxsRmxhZ0ljb25zfSAvPlxyXG4gIDwvPlxyXG4pKVxyXG4iXX0= */"
});

var sizes = {
  '1rem': '1rem',
  '2rem': '2rem',
  '3rem': '3rem',
  '4rem': '4rem',
  '5rem': '5rem',
  '6rem': '6rem'
};
var colorVariations = {
  textGrey: palette.textGrey.primary,
  linkBlue: palette.linkBlue.primary,
  noRed: palette.noRed.primary,
  yesGreen: palette.yesGreen.primary
};

var IconCollection = function IconCollection(_ref) {
  var collection = _ref.collection,
      _ref$adjustColorsKnob = _ref.adjustColorsKnob,
      adjustColorsKnob = _ref$adjustColorsKnob === void 0 ? true : _ref$adjustColorsKnob;
  return ___EmotionJSX(Wrapper, null, collection.map(function (_ref2) {
    var name = _ref2.name,
        component = _ref2.component;
    var SvgComponent = component;
    return ___EmotionJSX(IconContainer, {
      key: name
    }, ___EmotionJSX(Icon, {
      color: adjustColorsKnob ? select('Color', colorVariations, colorVariations.textGrey) : colorVariations.textGrey,
      secondaryColor: adjustColorsKnob ? select('Secondary', colorVariations, colorVariations.yesGreen) : colorVariations.yesGreen,
      size: select('Size', sizes, sizes['2rem'])
    }, ___EmotionJSX(SvgComponent, null)), ___EmotionJSX(IconName, null, name));
  }));
};

stories.add('Core', function () {
  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(IconCollection, {
    collection: allCoreIcons
  }));
});
stories.add('Links', function () {
  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(IconCollection, {
    collection: allLinksIcons
  }));
});
stories.add('Pax', function () {
  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(IconCollection, {
    collection: allPaxIcons
  }));
});
flagStories.add('Flags', function () {
  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(IconCollection, {
    adjustColorsKnob: false,
    collection: allFlagIcons
  }));
});